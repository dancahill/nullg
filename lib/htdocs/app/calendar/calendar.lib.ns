//include_template("common.ns");
//include_template("timezones.ns");
//include_template("class.datetime.ns");

namespace calendar {
	function today() {
		d1=new datetime();
		d1.unixtime+=d1.gettzoffset();
		d1.unixtime-=d1.unixtime%86400;
		return d1.unixtime;
	}

	function tz_utc2user(dt) {
		tz=_SERVER['TIMEZONES'][tonumber(_USER['preftimezone'])];
		o=tz.o;
		if (tz.d==1 && dt.isdst()) o+=60;
		dt.unixtime+=(o*60);
	}

	function tz_user2utc(dt) {
		tz=_SERVER['TIMEZONES'][tonumber(_USER['preftimezone'])];
		o=tz.o;
		if (tz.d==1 && dt.isdst()) o+=60;
		dt.unixtime-=(o*60);
	}

	//function getdim(m, y) {
	//	dim = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
	//	if (m<0) { m+=12; y-=1; } else if (m>11) { m-=12; y+=1; }
	//	if (m==2 && y%4==0) if (y%100!=0 || y%400==0) dim[1]++;
	//	return dim[m];
	//};

	// get full month in calendar table format containing a given unix timestamp
	function getmonth(utime) {
		utime=utime-(utime%86400);
		t=time.gmtime(utime);
		printday=t.tm_mday-t.tm_wday;
		startday=utime/86400-t.tm_wday;
		while (printday>1) { printday-=7; startday-=7; }
		d=startday;
		mon={};
		for (w=0;;w++) {
			mon[w]={};
			for (wd=0;wd<7;wd++) {
				dt=time.gmtime(d*86400);
				mon[w][wd]={
					tm_mday=dt.tm_mday;
					tm_mon=dt.tm_mon;
					tm_year=dt.tm_year;
					tm_isdst=dt.tm_isdst;
				};
				d++;
			}
			dt=time.gmtime(d*86400);
			if (dt.tm_mon>t.tm_mon || dt.tm_year>t.tm_year) break;
		}
		return mon;
	};
}

namespace calendar.html {
	function headermenu(day) {
		ui=new db.userinfo();
		var userid = tonumber(_GET['userid']);
		if (userid==0) {
			userid=ui.userid;
		}
		var menuitems = {
			{ text="DAY";          cls="main",   href="/app/calendar/dlist?day="+day+"&userid="+userid+"&status=0"; };
			{ text="WEEK";         cls="main",   href="/app/calendar/wlist?day="+day+"&userid="+userid+"&status=0"; };
			{ text="MONTH";        cls="main",   href="/app/calendar/mlist?day="+day+"&userid="+userid+"&status=0"; };
			{ text="YEAR";         cls="main",   href="/app/calendar/ylist?day="+day+"&userid="+userid+"&status=0"; };
			{ text="AVAILABILITY"; cls="main",   href="/app/calendar/avail?userid="+userid+"&status=0"; };
			{ text="NEW EVENT";    cls="dialog", href="/app/calendar/event?userid="+userid; };
			{ text="NEW TASK";     cls="dialog", href="/app/tasks/task?userid="+userid; };
		};
		html.headersubmenu(menuitems);
	}

	function htselect_user(selected) {
		ui = new db.userinfo();
		query=sprintf("SELECT userid, username FROM gw_users WHERE domainid = %d order by username ASC", ui.domainid);
		sqr=sql.query(query);
		printf("<option value='0'></option>\r\n");
		foreach (row in sqr.rows) {
			ts=tonumber(selected)==tonumber(row['userid'])?" selected":"";
			printf("<option value='%d'%s>%s</option>", tonumber(row['userid']), ts, strtohtml(row['username']));
		}
	}

	function htselect_eventtype(selected) {
		ui = new db.userinfo();
		query=sprintf("SELECT eventtypeid, eventtypename FROM gw_events_types ORDER BY eventtypename ASC", ui.domainid);
		sqr=sql.query(query);
		printf("<option value='0'></option>\r\n");
		foreach (row in sqr.rows) {
			ts=tonumber(selected)==tonumber(row['eventtypeid'])?" selected":"";
			printf("<option value='%d'%s>%s</option>", tonumber(row['eventtypeid']), ts, strtohtml(row['eventtypename']));
		}
	}

	function htselect_contact(selected) {
		ui = new db.userinfo();
		query=sprintf("SELECT contactid, surname, givenname FROM gw_contacts WHERE obj_did = %d order by surname, givenname ASC", ui.domainid);
		sqr=sql.query(query);
		printf("<option value='0'></option>\r\n");
		foreach (row in sqr.rows) {
			ts=tonumber(selected)==tonumber(row['contactid'])?" selected":"";
			sn=row['surname']; gn=row['givenname']; cn=sn+((sn!=""&&gn!="")?", ":"")+gn;
			printf("<option value='%d'%s>%s</option>", tonumber(row['contactid']), ts, strtohtml(cn));
		}
	}

	function htselect_project(selected) {
		selected=tonumber(selected);
		ui = new db.userinfo();
		query=sprintf("SELECT projectid, projectname FROM gw_projects WHERE obj_did = %d AND (status = 0 OR projectid = %d) ORDER BY projectname ASC", ui.domainid, selected);
		sqr=sql.query(query);
		printf("<option value='0'></option>\r\n");
		foreach (row in sqr.rows) {
			ts=selected==tonumber(row['projectid'])?" selected":"";
			printf("<option value='%d'%s>%s</option>", tonumber(row['projectid']), ts, strtohtml(row['projectname']));
		}
	}

	function htselect_priority(selected) {
		var option = { "Lowest", "Low", "Normal", "High", "Highest" };
		for (i=0;i<option.length();i++) {
			ts=tonumber(selected)==i?" selected":"";
			printf("<option value='%d'%s>%s</option>", i, ts, strtohtml(option[i]));
		}
	}

	function htselect_availability(selected) {
		var option = { "Available", "Busy" };
		for (i=0;i<option.length();i++) {
			ts=tonumber(selected)==i?" selected":"";
			printf("<option value='%d'%s>%s</option>", i, ts, strtohtml(option[i]));
		}
	}

	function htselect_status(selected) {
		var option = { "Open", "Closed" };
		for (i=0;i<option.length();i++) {
			ts=tonumber(selected)==i?" selected":"";
			printf("<option value='%d'%s>%s</option>", i, ts, strtohtml(option[i]));
		}
	}

	function htselect_closingstatus(selected) {
		query=sprintf("SELECT eventclosingid, closingname FROM gw_events_closings ORDER BY closingname ASC");
		sqr=sql.query(query);
		printf("<option value='0'></option>\r\n");
		foreach (row in sqr.rows) {
			ts=tonumber(selected)==tonumber(row['eventclosingid'])?" selected":"";
			printf("<option value='%d'%s>%s</option>", tonumber(row['eventclosingid']), ts, strtohtml(row['closingname']));
		}
	}

	function htview_reminder(selected)
	{
		selected=tonumber(selected);

		if (selected==0) {
			return sprintf("No reminder");
		} else if ((selected>0)&&(selected<60)) {
			return sprintf("%d minutes before", selected);
		} else if ((selected>59)&&(selected<120)) {
			return sprintf("%d hour before", selected/60);
		} else if ((selected>119)&&(selected<1440)) {
			return sprintf("%d hours before", selected/60);
		} else if ((selected>1439)&&(selected<2880)) {
			return sprintf("%d day before", selected/1440);
		} else if (selected>2879) {
			return sprintf("%d days before", selected/1440);
		}
		return "???";
	}

	function htselect_reminder(selected)
	{
		selected=tonumber(selected);
		print("<OPTION VALUE='0'>No reminder\r\n");
		print("<OPTION VALUE='15'%s>15 minutes before\r\n", (selected==15)?" SELECTED":"");
		print("<OPTION VALUE='30'%s>30 minutes before\r\n", (selected==30)?" SELECTED":"");
		for (i=1;i<169;i++) {
			switch(i) {
			case 1:
			case 2:
			case 3:
			case 6:
			case 12:
			case 24:
			case 48:
			case 72:
			case 96:
			case 120:
			case 144:
			case 168:
				printf("<OPTION VALUE='%d'%s>%s\r\n", i*60, i*60==selected?" SELECTED":"", calendar.html.htview_reminder(i*60));
				continue;
			default:
				continue;
			}
		}
	}

	function htselect_startdate(value) {
		dt = new datetime(time.mktime(value));
		calendar.tz_utc2user(dt);
		t=dt.tostring();
		t=t.sub(0, 10);
		print(strtohtml(t));
	}

	function htselect_starttime(value) {
		local function pad(n) {
			x="0"+n;
			return x.sub(-2, 2);
		}

		dt = new datetime(time.mktime(value));
		calendar.tz_utc2user(dt);
		t=dt.tostring();
		t=t.sub(11, 8);
		for (h=0;h<24;h++) {
			for (m=0;m<60;m+=15) {
				tv=sprintf("%s:%s:00", pad(h), pad(m));
				td=sprintf("%d:%s %s", h==0?12:h<13?h:h-12, pad(m), h>11?"PM":"AM");
				ts=tv==t?" selected":"";
				printf("<option value='%s'%s>%s</option>\r\n", tv, ts, td);
			}
		}
	}

	function htselect_userfilter() {
		ui=new db.userinfo();
		script_name="/app/calendar/"+_filename;
		userid = tonumber(_GET['USERID']);
		groupid = tonumber(_GET['GROUPID']);
		status = tonumber(_GET['STATUS']);

		day = tonumber(_GET['DAY']);
		if (day==0) {
			t=calendar.today();
			day=t/86400;
		//} else {
		//	t=day*86400;
		}

		if (userid==0 && groupid==0) userid=ui.userid;

//		d1=new datetime();
//		d1.unixtime+=d1.gettzoffset();
//		if (day>0) d1.unixtime=day*86400;
//		d1.unixtime-=d1.unixtime%86400;
//		day = d1.unixtime/86400;

		sqr1=sql.query("SELECT * FROM gw_groups WHERE obj_did="+ui.domainid+" ORDER BY groupname");
		sqr2=sql.query("SELECT * FROM gw_users WHERE obj_did="+ui.domainid+" ORDER BY username");

		print("<script>");
print("
function go1() {
	var userid=document.eventfilter.userid;
	var url=userid.options[userid.selectedIndex].value;
	if (url!='') ns.GoTo(url);
}
function go2() {
	var status=document.eventfilter.status;
	var url=status.options[status.selectedIndex].value;
	if (url!='') ns.GoTo(url);
}
");
		print("</script>");
		print("<form name='eventfilter'>");
		print("<select name='userid' onChange='go1()'>");
		foreach (row in sqr1.rows) {
			if (tonumber(row['groupid'])==groupid) ts=" SELECTED"; else ts="";
			printf("<option value='%s?groupid=%d&status=%d'%s>%s</option>\r\n", script_name, tonumber(row['groupid']), status, ts, strtohtml(row['groupname']));
			foreach (urow in sqr2.rows) {
				if (tonumber(urow['groupid'])!=tonumber(row['groupid'])) continue;
				if (tonumber(urow['userid'])==userid) ts=" SELECTED"; else ts="";
				printf("<option value='%s?day=%d&userid=%d&status=%d'%s>&nbsp;&nbsp;%s</option>\r\n", script_name, day, tonumber(urow['userid']), status, ts, strtohtml(urow['username']));
			}
		}
		print("</select>");
		print("<select name='status' onChange='go2()'>");
		statuses = { "Open", "Closed", "All" };
		if (groupid>0) {
			printf("<option value='%s?day=%d&groupid=%d&status=%d'%s>%s</option>\r\n", script_name, day, groupid, 2, status==2?" SELECTED":"", strtohtml(statuses[2]));
			printf("<option value='%s?day=%d&groupid=%d&status=%d'%s>%s</option>\r\n", script_name, day, groupid, 0, status==0?" SELECTED":"", strtohtml(statuses[0]));
			printf("<option value='%s?day=%d&groupid=%d&status=%d'%s>%s</option>\r\n", script_name, day, groupid, 1, status==1?" SELECTED":"", strtohtml(statuses[1]));
		} else {
			printf("<option value='%s?day=%d&userid=%d&status=%d'%s>%s</option>\r\n", script_name, day, userid, 2, status==2?" SELECTED":"", strtohtml(statuses[2]));
			printf("<option value='%s?day=%d&userid=%d&status=%d'%s>%s</option>\r\n", script_name, day, userid, 0, status==0?" SELECTED":"", strtohtml(statuses[0]));
			printf("<option value='%s?day=%d&userid=%d&status=%d'%s>%s</option>\r\n", script_name, day, userid, 1, status==1?" SELECTED":"", strtohtml(statuses[1]));
		}
		print("</select>");
		print("</form>");
	}
}
