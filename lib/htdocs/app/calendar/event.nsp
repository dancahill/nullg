<?nsp

class event {
	function view(id) {
		local function printnotes(id) {
			if (id==0) return;
			ui=new db.userinfo();
			printf("<tr><th colspan=2>Notes<span style='float:right;font-size:14px'><a class='dialog' style=\"color:#ffffff;text-decoration:none;\" href=\"/app/notes/note?id=0&eventid=%d\">&nbsp;&plus;&nbsp;</a></span></th></tr>\r\n", id);
			print("<tr><td colspan=2>");
			query=sprintf("SELECT * FROM gw_notes WHERE obj_did = %d AND tablename='events' AND tableindex=%d", ui.domainid, id);
			sqr=sql.query(query);
			sqrlen=sqr.rows.length();
			if (sqrlen>0) {
				print("<div style='max-height:250px;overflow:scroll;overflow-x:hidden'><table border=0 class='contenttable' style='width:100%'>");
				for (i=0;i<sqrlen;i++) {
					rec=sqr.rows[i];
					url=sprintf("/app/notes/note?id=%d", tonumber(rec['noteid']));
					print("<tr><td onclick=\"return ns.dialog.create('"+url+"');\" width=100%>");
					printf("<a class='dialog' href=\"%s\">%s</a></td></tr>", url, strtohtml(rec['notetitle']));
				}
				print("</table></div>");
			} else {
				print("<div style='max-height:250px;overflow:scroll;overflow-x:hidden'><table border=0 class='contenttable' style='width:100%'>");
				url=sprintf("/app/notes/note?eventid=%d", id);
				print("<tr title='New Note'><td onclick=\"return ns.dialog.create('"+url+"');\" width=100%>&nbsp;</td></tr>");
				print("</table></div>");
			}
			print("</td></tr>");
		}
		var method=_SERVER['REQUEST_METHOD'];
		if (id==null) id=tonumber((method=='POST')?_POST['EVENTID']:_GET['ID']);
		Q=db.events.get(id);
		if (Q==null || Q.rows.length()!=1) {
			print("<center>No matching record found for ",id,"</center>\r\n");
			return;
		}
		EVENT=Q.rows[0];
		if (id==0) {
			EVENT['contactid']=tonumber(_GET['CONTACTID']);
			EVENT['projectid']=tonumber(_GET['PROJECTID']);
		}
		var form=new html_form(EVENT);
		var tabset=new html_tabset({activepage=1,minheight=190});
		//if (id==0) tabset.activepage=2;
		if (id>0) tabset.addtab("SUMMARY");
		tabset.addtab("SETTINGS");
		tabset.addtab("DETAILS");
		tabset.addtab("PERMISSIONS");
		tabset.showtabs();
		print("<form id=eventedit name=eventedit METHOD=POST ACTION=\"/app/calendar/event\" onsubmit=\"return ns.dialog.submit(event, 'event', 'save');\" enctype='multipart/form-data' autocomplete='off'>\r\n");
		form.addfield({name="eventid", type="hidden"});
		printf("<input type=hidden name=formurl value=\"%s\">\r\n", strtohtml(method=='POST'?_POST['FORMURL']:_SERVER['REQUEST_URI']));
		print("<div style='width:100%;background-color:#f0f0f0'>");
		if (id>0) {
			tabset.pagebegin();
			print("<table class=\"contentform\" style=\"width:100%\">\r\n");
			print("<tr><td>summary not done yet</td></tr>");
			print("</table>\r\n");
			tabset.pageend();
		}
		tabset.pagebegin();
		print("<table class=\"contentform\" style='width:100%'><tr><td>\r\n");
		print("<div style='float:left'>");
		print("<table class=\"contentform contentform2\">\r\n");
		form.addfield({name="eventname", label="Event Name", required=true});
		form.addfield({name="assignedby", label="Assigned By", type="select", handler=calendar.html.htselect_user});
		form.addfield({name="assignedto", label="Assigned To", type="select", handler=calendar.html.htselect_user});
		form.addfield({name="eventtype", label="Event type", type="select", handler=calendar.html.htselect_eventtype});
		form.addfield({name="contactid", label="Contact Name", type="select", handler=calendar.html.htselect_contact});
		form.addfield({name="projectid", label="Project", type="select", handler=calendar.html.htselect_project});
		form.addfield({name="priority", label="Priority", type="select", handler=calendar.html.htselect_priority});
		form.addfield({name="reminder", label="Reminder", type="select", handler=calendar.html.htselect_reminder});
		print("</table>\r\n");
		print("</div><div style='float:left'>");
		print("<table class=\"contentform contentform2\">\r\n");
		form.addfield({name="eventstart1", src="eventstart", label="Start Date", required=true, handler=calendar.html.htselect_startdate});
		form.addfield({name="eventstart2", src="eventstart", label="Start Time", type="select", handler=calendar.html.htselect_starttime});
		form.addfield({name="eventfinish1", src="eventfinish", label="End Date", required=true, handler=calendar.html.htselect_startdate});
		form.addfield({name="eventfinish2", src="eventfinish", label="End Time", type="select", handler=calendar.html.htselect_starttime});
		form.addfield({name="busy", label="Availability", type="select", handler=calendar.html.htselect_availability});
		form.addfield({name="status", label="Status", type="select", handler=calendar.html.htselect_status});
		form.addfield({name="closingstatus", label="Closing status", type="select", handler=calendar.html.htselect_closingstatus});
		print("</table>\r\n");
		print("</div>");
		print("</td></tr></table>");
		tabset.pageend();
		tabset.pagebegin();
		print("<table class=\"contentform\" style=\"width:100%\">\r\n");
		form.addfield({name="details", label="Details", type="textarea", style="min-height:"+(tabset.minheight-32)+"px;width:100%", required=true});
		print("</table>\r\n");
		tabset.pageend();
		tabset.pagebegin();
		print("<table class=\"contentform\" style=\"width:100%\">\r\n");
		print("<tr><td>permissions not done yet</td></tr>");
		print("</table>\r\n");
		tabset.pageend();
		print("</div>");
		print("<div style='clear:both;text-align:center'>");
		print("<table class=\"contentform\" style=\"width:100%\">\r\n");
		printnotes(id);
		print("</table>\r\n");
		print("<input type=hidden name=submitaction value=''>\r\n");
		print("<input type=submit class=frmButton name=submit value='Save'>\r\n");
		if (id>0) print("<input type=submit class=frmButton name=submit value='Delete'>\r\n");
		//print("<input type=reset class=frmButton name=reset value='Reset'>\r\n");
		print("</div>");
		print("</form>\r\n");
		form.validate("gw_events");

		title="Event: "+EVENT['eventname'];
		if (method=='POST') title+=" (Saved)";
		divname=sprintf("dialog_event_%d", id);
		printf("<script>\r\n$(document).ready(function() {\r\n");
		printf("	$('#eventstart1').datepicker({ dateFormat: 'yy-mm-dd' });\r\n");
		printf("	$('#eventfinish1').datepicker({ dateFormat: 'yy-mm-dd' });\r\n");
		printf("	ns.dialog.setup(\"%s\", \"%s\", %d);\r\n", divname, strtohtml(title), tabset.activepage);
		printf("});\r\n</script>");
		return;
	}

	function validate(rec) {
		isvalid=true;
		if (time.mktime(rec['eventfinish'])<time.mktime(rec['eventstart'])) {
			print("<b>events cannot finish before they start</b><br/>");
			isvalid=false;
		}
		return isvalid;
	}

	function save() {
		local function addfield(record, name, value) {
			if (value==null) {
				if (_POST[name.toupper()]==null) {
					throw sprintf("field '%s'is missing in post data", name);
				}
				value = _POST[name.toupper()];
			}
			record[name.tolower()] = value;
		}
		if (_SERVER['REQUEST_METHOD']!='POST') return;
		id=tonumber(_POST['EVENTID']);
		Q=db.events.get(id);
		if (Q==null || Q.rows.length()!=1) {
			print("<center>No matching record found for ",id,"</center>\r\n");
			return;
		}
		EVENT=Q.rows[0];
		switch (_POST['SUBMITACTION']) {
		case 'save':
			addfield(EVENT, "assignedby");
			addfield(EVENT, "assignedto");
			addfield(EVENT, "eventname");
			addfield(EVENT, "eventtype");
			addfield(EVENT, "contactid");
			addfield(EVENT, "projectid");
			addfield(EVENT, "priority");
			addfield(EVENT, "reminder");
			eventstart=time.mktime(_POST["EVENTSTART1"]+" "+_POST["EVENTSTART2"]);
			dt = new datetime(eventstart);
			calendar.tz_user2utc(dt);
			addfield(EVENT, "eventstart", dt.tostring());
			eventfinish=time.mktime(_POST["EVENTFINISH1"]+" "+_POST["EVENTFINISH2"]);
			dt = new datetime(eventfinish);
			calendar.tz_user2utc(dt);
			addfield(EVENT, "eventfinish", dt.tostring());
			addfield(EVENT, "busy");
			addfield(EVENT, "status");
			addfield(EVENT, "closingstatus");
			addfield(EVENT, "details");
			if (!this.validate(EVENT)) {
				this.view(EVENT['eventid']);
				return;
			}
			if (!db.events.set(EVENT)) {
				printf("error saving record");
				return;
			}
			printf("<script>\r\n");
			printf("ns.status.show('event %d saved', 5);\r\n", EVENT['eventid']);
			if (id==0) printf("ns.dialog.reopen('dialog_event_%d','/app/calendar/event?id=%d');\r\n", id, EVENT['eventid']);
			printf("</script>\r\n");
			if (id>0) this.view(EVENT['eventid']);
			break;
		case 'delete':
			if (!db.events.remove(EVENT)) {
				printf("error deleting record");
				return;
			}
			printf("<center>event %d deleted</center>", id);
			printf("<script>\r\n");
			printf("ns.status.show(\"event %d deleted\", 5);\r\n", id);
			printf("ns.dialog.close('dialog_event_%d');\r\n", id);
			printf("</script>\r\n");
			break;
		}
		printf("<script>\r\n");
		printf("ns.dialog.refreshparent('dialog_event_%d', 'dialog_event_%d');\r\n", EVENT['eventid'], id);
		printf("</script>\r\n");
		return;
	}
}

try {
	include_template("common.ns");
	include("calendar.lib.ns");
	e=new event();
	if (_SERVER['REQUEST_METHOD']=='POST') {
		e.save();
	} else {
		e.view();
	}
} catch (ex) {
	print("Exception: [",ex.description,"]");
}

?>