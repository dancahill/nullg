
function view_bookmark(id) {
	var method=_SERVER['REQUEST_METHOD'];
	if (id==null) id=tonumber((method=='POST')?_POST['BOOKMARKID']:_GET['ID']);
	Q=db.bookmarks.getbookmark(id);
	BOOKMARK=Q['_rows'][0];
	if (Q==null || BOOKMARK==null) {
		print("<CENTER>No matching record found for ",id,"</CENTER>\r\n");
		return;
	}
	var form=new html_form(BOOKMARK);
	print("<form id=bookmarkedit name=bookmarkedit METHOD=POST ACTION=\"/app/bookmarks/bookmarkfolder\" onsubmit=\"return ns.ModalSubmit(event, 'bookmark', 'save');\" enctype='multipart/form-data'>\r\n");
	form.addfield({name="bookmarkid", type="hidden"});
	print("<table class=\"contentform\">\r\n");
	form.addfield({name="folderid", label="Bookmark Folder", type="select", handler=bookmarkhtml.htselect_bookmarkfolder});
	form.addfield({name="bookmarkname", label="Bookmark Name", required=true});
	form.addfield({name="bookmarkurl", label="Bookmark Address", required=true});
	print("</table>\r\n");
	form.validate("gw_bookmarks");
	print("<input type=hidden name=submitaction value=''>\r\n");
	print("<input type=submit class=frmButton name=Submit value='Save'>\r\n");
	if (id>0) {
		print("<INPUT TYPE=SUBMIT CLASS=frmButton NAME=submit VALUE='Delete' onClick=\"return ns.ModalSubmit(event, 'bookmark', 'delete');\">\r\n");
	}
	print("<INPUT TYPE=RESET CLASS=frmButton NAME=Reset VALUE='Reset'>\r\n");
	print("</form>\r\n");
	//if (method=="POST") printf("<hr>_POST=[%s]", serialize(_POST));
	return;
}

function save_bookmark() {
	if (_SERVER['REQUEST_METHOD']!='POST') return;
	id=tonumber(_POST['BOOKMARKID']);
	Q=db.bookmarks.getbookmark(id);
	BOOKMARK=Q['_rows'][0];
	if (Q==null || BOOKMARK==null) {
		print("<CENTER>No matching record found for ",id,"</CENTER>\r\n");
		return;
	}
	folderid=tonumber(BOOKMARK['folderid']);
	//printf("[%d][%d]", tonumber(BOOKMARK['folderid']), tonumber(_POST['FOLDERID']));
	switch (_POST['SUBMITACTION']) {
	case 'save':
		BOOKMARK['folderid']=tonumber(_POST['FOLDERID']);
		BOOKMARK['bookmarkname']=_POST['BOOKMARKNAME'];
		BOOKMARK['bookmarkurl']=_POST['BOOKMARKURL'];
		db.bookmarks.setbookmark(BOOKMARK);
		printf("bookmark %d saved", BOOKMARK['bookmarkid']);
		view_bookmark(BOOKMARK['bookmarkid']);
		break;
	case 'delete':
		db.bookmarks.deletebookmark(BOOKMARK);
		printf("bookmark %d deleted", BOOKMARK['bookmarkid']);
		break;
	}
	printf("<script>\r\nns.GoTo('/app/bookmarks/list?folderid='+%d);\r\n</script>\r\n", folderid);
	return;
}

try {
	include_template("common.ns");
	include_template("class.html_form.ns");
	include("bookmarks.lib.ns");
	print("<center>\r\n");
	if (_SERVER['REQUEST_METHOD']=='POST') {
		save_bookmark();
	} else {
		view_bookmark();
	}
	print("</center>\r\n");
} catch (e) {
	print("Exception: [",e.description,"]");
}
