
function view_bookmark(id) {
	var method=_SERVER['REQUEST_METHOD'];
	if (id==null) id=tonumber((method=='POST')?_POST['BOOKMARKID']:_GET['ID']);
	Q=db.bookmarks.getbookmark(id);
	if (Q==null) {
		print("<CENTER>No matching record found for ",id,"</CENTER>\r\n");
		return;
	}
	BOOKMARK=Q['_rows'][0];
	print("<form id=bookmarkedit name=bookmarkedit METHOD=POST ACTION=\"/app/bookmarks/editbookmark\" onsubmit=\"return ModalSubmit(event, 'bookmark', 'save');\" enctype='multipart/form-data'>\r\n");
	print("<input type=hidden name=bookmarkid value='",id,"'>\r\n");
	print("<table class=\"contentform\">\r\n");
	print("<tr><td>Bookmark Folder</td><td><select name=folderid value='",1,"'>\r\n");
	bookmarkhtml.htselect_bookmarkfolder(BOOKMARK['folderid']);
	print("</select></td></tr>\r\n");
	//<tr><td><b>&nbsp;Login Name&nbsp;</b></td><td><input type='text' name='username' size='25' maxlength='50' value='' placeholder='Login Name' required='required' autocorrect='off' autocapitalize='off'></td></tr>
	print("<tr><td>Bookmark Name</td><td><input type=text name=bookmarkname value=\""+strtohtml(BOOKMARK['bookmarkname'])+"\" required='required' autocorrect='off'></td></tr>\r\n");
	print("<tr><td>Bookmark Address</td><td><input type=text name=bookmarkurl value=\""+strtohtml(BOOKMARK['bookmarkurl'])+"\" required='required' autocorrect='off'></td></tr>\r\n");
	print("</table>\r\n");
	print("<input type=hidden name=submitaction value=''>\r\n");
	print("<input type=submit class=frmButton name=Submit value='Save'>\r\n");
	if (id>0) {
//		print("<INPUT TYPE=SUBMIT CLASS=frmButton NAME=submit VALUE='Delete' onClick=\"return ConfirmDelete();\">\r\n");
		print("<INPUT TYPE=SUBMIT CLASS=frmButton NAME=submit VALUE='Delete' onClick=\"return ModalSubmit(event, 'bookmark', 'delete');\">\r\n");
	}
	print("<INPUT TYPE=RESET CLASS=frmButton NAME=Reset VALUE='Reset'>\r\n");
	print("</form>\r\n");
	printf("<hr>_POST=[%s]", serialize(_POST));
	return;
}

function save_bookmark() {
	if (_SERVER['REQUEST_METHOD']!='POST') return;
	id=tonumber(_POST['BOOKMARKID']);
	Q=db.bookmarks.getbookmark(id);
	if (Q==null) {
		print("<CENTER>No matching record found for ",id,"</CENTER>\r\n");
		return;
	}
	BOOKMARK=Q['_rows'][0];
	if (_POST['SUBMITACTION']=='save') {
		BOOKMARK['folderid']=tonumber(_POST['FOLDERID']);
		BOOKMARK['bookmarkname']=_POST['BOOKMARKNAME'];
		BOOKMARK['bookmarkurl']=_POST['BOOKMARKURL'];
		db.bookmarks.setbookmark(BOOKMARK);
		printf("bookmark %d saved", BOOKMARK['bookmarkid']);
		view_bookmark(BOOKMARK['bookmarkid']);
	} if (_POST['SUBMITACTION']=='delete') {
		db.bookmarks.deletebookmark(BOOKMARK);
		printf("bookmark %d deleted", BOOKMARK['bookmarkid']);
	}
	return;
}

try {
	include_template("common.ns");
	include("bookmarks.lib.ns");
	print("<center>\r\n");
	if (_SERVER['REQUEST_METHOD']=='POST') {
		save_bookmark();
	} else {
		view_bookmark();
	}
	print("</center>\r\n");
} catch (e) {
	print("Exception: [",e.description,"]");
}
