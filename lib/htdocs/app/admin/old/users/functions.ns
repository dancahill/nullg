function default_user() {
	return {
		_tuples=1,
		_rows = {
			[0] = {
				userid          = "0",
				obj_ctime       = "2001-01-01 00:00:00",
				obj_mtime       = "2001-01-01 00:00:00",
				obj_uid         = "0",
				obj_gid         = _USER['obj_gid'],
				obj_did         = _USER['obj_did'],
				obj_gperm       = "0",
				obj_operm       = "0",
				username        = "",
				password        = "",
				groupid         = _USER['groupid'],
				domainid        = _USER['domainid'],
				enabled         = "1",
				authdomainadmin = "31",
				authadmin       = "31",
				authbookmarks   = "31",
				authcalendar    = "31",
				authcalls       = "31",
				authcontacts    = "31",
				authemail       = "15",
				authfiles       = "31",
				authfinance     = "31",
				authforums      = "31",
				authmessages    = "13",
				authprofile     = "3",
				authprojects    = "31",
				authquery       = "17",
				prefdaystart    = "9",
				prefdaylength   = "8",
				prefmailcurrent = "0",
				prefmaildefault = "0",
				prefmaxlist     = "100",
				prefmenustyle   = "1",
				preftimezone    = "10",
				prefgeozone     = "1",
				preflanguage    = "en",
				preftheme       = "lite",
				availability    = "",
				surname         = "",
				givenname       = "",
				jobtitle        = "",
				division        = "",
				supervisor      = "",
				address         = "",
				locality        = "",
				region          = "",
				country         = "",
				postalcode      = "",
				homenumber      = "",
				worknumber      = "",
				faxnumber       = "",
				cellnumber      = "",
				pagernumber     = "",
				email           = "",
				birthdate       = "",
				hiredate        = "",
				sin             = "",
				isactive        = "",
			};
		};
	};
}

/* this needs to be replaced by a c api function */
function urlencode(s) {
	s=s.tostring();
	s=string.replace(s, "\"", "&quot;");
	s=string.replace(s, "&",  "&amp;");
	s=string.replace(s, " ",  "&nbsp;");
	s=string.replace(s, "<",  "&lt;");
	s=string.replace(s, ">",  "&gt;");
	return s;
}

function str2sql(s) {
	return s;
}

function user_list() {
	global Q=ldir.getlist("domain", 0);
	print("<CENTER>");
	if (Q._tuples<1) {
		print("<B>Found 0 matching users</B></CENTER>\r\n");
		return;
	}
	print(
		"<TABLE BORDER=1 CELLPADDING=2 CELLSPACING=0 STYLE='border-style:solid' WIDTH=400>\r\n",
		"<TR><TH ALIGN=LEFT NOWRAP STYLE='border-style:solid'>&nbsp;User Name&nbsp;</TH>",
		"<TH ALIGN=LEFT NOWRAP STYLE='border-style:solid'>&nbsp;Real Name&nbsp;</TH>",
		"<TH ALIGN=LEFT NOWRAP STYLE='border-style:solid'>&nbsp;Zone&nbsp;</TH>",
		"<TH ALIGN=LEFT NOWRAP STYLE='border-style:solid'>&nbsp;Groups&nbsp;</TH>",
		"<TH ALIGN=LEFT NOWRAP STYLE='border-style:solid'>&nbsp;</TH></TR>\r\n"
	);
	i=0;
	foreach (rec in Q['_rows']) {
		printf("<TR CLASS=\"FIELDNAME\"><TD ALIGN=LEFT COLSPAN=5 NOWRAP STYLE='border-style:solid'><B>%s</B></TD></TR>", str2html(rec['domainname']));
		sqr=sqlquery(sprintf("SELECT * FROM gw_users WHERE domainid = %d ORDER BY username ASC", tonumber(rec['domainid'])));
		foreach (userrec in sqr['_rows']) {
			id=tonumber(userrec['userid']);
			sn=userrec['surname'];
			gn=userrec['givenname'];
			if ((sizeof(sn)>0)&&(sizeof(gn)>0)) sep=", "; else if (sizeof(sn)==0&&sizeof(gn)==0) sep="&nbsp;"; else sep="";
			vn=sn+sep+gn;

			printf("<TR CLASS=\"FIELDVAL\">");
			printf("<TD NOWRAP style='cursor:hand; border-style:solid' onClick=\"window.location.href='view?id=%d'\">", id);
			printf("<A HREF=\"view?id=%d\">%s</A></TD>", id, str2html(userrec['username']));
			printf("<TD NOWRAP STYLE='padding:0px; border-style:solid'>%s&nbsp;</TD>\r\n", str2html(vn));
			printf("<TD NOWRAP STYLE='padding:0px; border-style:solid'>%s&nbsp;</TD>\r\n", str2html(userrec['prefgeozone']));
			printf("<TD NOWRAP STYLE='padding:0px; border-style:solid'>%s&nbsp;</TD>\r\n", str2html(userrec['groupid']));
			printf("<TD NOWRAP STYLE='padding:0px; border-style:solid'>&nbsp;</TD></TR>\r\n");
			lastrec=userrec;
			i++;
		}
	}
	print("</TABLE>\r\n");
	printf("<A HREF=\"view?id=0\">New User</A>");
	print("</CENTER><BR>");
//	print("</CENTER><PRE>",serialize(Q),"</PRE>");
	Q=null;
	return;
}

function user_view() {
	id=tonumber(_GET['ID']);
	if (id!=0) {
		global Q=ldir.getentry("user", id);
		if (Q==null) {
			print("<CENTER>No matching record found for ",id,"</CENTER>\r\n");
			return;
		}
	} else {
//		global Q={_tuples=1,_rows={[0]={id=0,pid=tonumber(_USER['domainid']),did=tonumber(_USER['domainid']),_data={cn='New User'}}}};
		global Q=default_user();
	}
//	USER=Q['_rows'][0]['_data'];
	USER=Q['_rows'][0];

//	print("<TR BGCOLOR=LIGHTBLUE><TD COLSPAN=4><PRE>",serialize(USER),"</PRE></TD></TR>");

	if ((sizeof(USER['address'])>0)&&(sizeof(USER['locality'])>0)&&(sizeof(USER['region'])>0)&&(sizeof(USER['country'])>0)) {
//		haddr="http://www.mapquest.com/maps/map.adp?country="+USER['country']+"&address="+USER['address']+"&city="+USER['locality']+"&state="+USER['region'];
		haddr="http://maps.google.com/maps?iwloc=A&hl=en&q="+USER['address']+", "+USER['locality']+", "+USER['region']+", "+USER['country'];
		haddr=urlencode(haddr);
	}
	disabled=" DISABLED";
	is_editable=0;
//	if (priv&A_ADMIN) {
		disabled="";
		is_editable=1;
//	} else if ((priv&A_MODIFY)&&(perm>=2)) {
//	} else if (priv&A_MODIFY) {
//		disabled="";
//		is_editable=1;
//	}
//	tz1=time_tzoffset(conn, time(NULL));
//	tz2=time_tzoffsetcon(conn, time(NULL), id);
//	if (id<1) tz2=tz1;
	print("<SCRIPT LANGUAGE=\"JavaScript\" type=\"text/javascript\">\r\n<!--\r\n");
	print("function ConfirmDelete() {\r\n");
	print("	return confirm(\"Are you sure you want to delete this record?\");\r\n");
	print("}\r\n");
//	htscript_showpage(conn, 7);
	global pages=6;
	include_template("html/tabs.ns");
//	showtabs(7);
	global pages=null;
	print("// -->\r\n</SCRIPT>\r\n");
	print("<CENTER>\r\n");
	if (id>0) {
		print("<B>",str2html(USER['givenname'])); if (sizeof(USER['givenname'])>0) print(" ");
		print(str2html(USER['surname']),"</B>");
	} else {
		print("<B>New User</B>\r\n");
	}
	print("<FORM METHOD=POST ACTION=\"save\" NAME=useredit>\r\n");
	print("<INPUT TYPE=hidden NAME=id VALUE='",id,"'>\r\n");
	print("<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=425>\r\n");

	print("<TR><TD ALIGN=LEFT>");
	print("<TABLE BORDER=1 CELLPADDING=0 CELLSPACING=0 STYLE='border-style:solid'>\r\n<TR CLASS=\"FIELDNAME\">\r\n");
	print("<TD ID=page1tab NOWRAP STYLE='border-style:solid'>&nbsp;<A ACCESSKEY=1 HREF=\"javascript:showpage(1)\">SUMMARY</A>&nbsp;</TD>\r\n");
	print("<TD ID=page2tab NOWRAP STYLE='border-style:solid'>&nbsp;<A ACCESSKEY=2 HREF=\"javascript:showpage(2)\">USER</A>&nbsp;</TD>\r\n");
	print("<TD ID=page3tab NOWRAP STYLE='border-style:solid'>&nbsp;<A ACCESSKEY=3 HREF=\"javascript:showpage(3)\">NAME</A>&nbsp;</TD>\r\n");
	print("<TD ID=page4tab NOWRAP STYLE='border-style:solid'>&nbsp;<A ACCESSKEY=4 HREF=\"javascript:showpage(4)\">ADDRESS</A>&nbsp;</TD>\r\n");
	print("<TD ID=page5tab NOWRAP STYLE='border-style:solid'>&nbsp;<A ACCESSKEY=5 HREF=\"javascript:showpage(5)\">PREFERENCES</A>&nbsp;</TD>\r\n");
	print("<TD ID=page6tab NOWRAP STYLE='border-style:solid'>&nbsp;<A ACCESSKEY=6 HREF=\"javascript:showpage(6)\">PERMISSIONS</A>&nbsp;</TD>\r\n");
	print("</TR></TABLE>");
	print("</TD></TR>\r\n");
	print("<TR CLASS=\"EDITFORM\"><TD VALIGN=TOP STYLE='padding:3px'>");
	print("<HR>\r\n");
	print("<DIV ID=page1 STYLE='display: block'>\r\n");
	print("<TABLE BORDER=0 CELLPADDING=2 CELLSPACING=0 WIDTH=\"100%\">\r\n");
	print("<TR CLASS=\"EDITFORM\"><TD ALIGN=RIGHT NOWRAP><B>&nbsp;Name&nbsp;</B></TD><TD NOWRAP WIDTH=\"100%\">");
	print(str2html(USER['givenname'])); if (sizeof(USER['givenname'])>0) print(" ");
	print(str2html(USER['surname'])); if (sizeof(USER['surname'])>0) print(" ");
	if (sizeof(USER['userid'])>0) print(" (",str2html(USER['username']),")");
	print("</TD>\r\n");
	print("</TR>\r\n");
	print("<TR CLASS=\"EDITFORM\"><TD ALIGN=RIGHT NOWRAP><B>&nbsp;E-Mail Address&nbsp;</B></TD><TD NOWRAP WIDTH=\"100%\">");

	print("<A HREF=\"mailto:",USER['email'],"\">",str2html(USER['email']),"</A>&nbsp;</TD></TR>\r\n");
	if (haddr!=null) print("<TR CLASS=\"EDITFORM\"><TD ALIGN=RIGHT NOWRAP><B>&nbsp;Home Address&nbsp;</B></TD><TD NOWRAP WIDTH=\"100%\"><A HREF=\"",haddr,"\" TARGET=\"_blank\">Map Available</A>&nbsp;</TD></TR>\r\n");
	print("</TABLE>\r\n");
	print("</DIV>\r\n");
	print(
		"<DIV ID=page2 STYLE='display: block'>\r\n",
		"<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=\"100%\">\r\n",
		"<TR CLASS=\"EDITFORM\"><TD NOWRAP><B>&nbsp;Username      &nbsp;</B></TD><TD ALIGN=RIGHT><INPUT NAME=username TYPE=TEXT     value=\"",str2html(USER['username']), "\" SIZE=45 STYLE='width:255px'",disabled,"></TD></TR>\r\n",
		"<TR CLASS=\"EDITFORM\"><TD NOWRAP><B>&nbsp;Password      &nbsp;</B></TD><TD ALIGN=RIGHT><INPUT NAME=password TYPE=PASSWORD value=\"\"                                SIZE=45 STYLE='width:255px'",disabled,"></TD></TR>\r\n",
		"<TR CLASS=\"EDITFORM\"><TD NOWRAP><B>&nbsp;Default Group &nbsp;</B></TD><TD ALIGN=RIGHT><INPUT NAME=groupid  TYPE=TEXT     value=\"",str2html(USER['groupid']),  "\" SIZE=45 STYLE='width:255px'",disabled,"></TD></TR>\r\n",
		"<TR CLASS=\"EDITFORM\"><TD NOWRAP><B>&nbsp;Domain        &nbsp;</B></TD><TD ALIGN=RIGHT><INPUT NAME=domainid TYPE=TEXT     value=\"",str2html(USER['domainid']), "\" SIZE=45 STYLE='width:255px'",disabled,"></TD></TR>\r\n",
		"</TABLE>\r\n",
		"</DIV>\r\n"
	);
	print(
		"<DIV ID=page3 STYLE='display: block'>\r\n",
		"<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=\"100%\">\r\n",
		"<TR CLASS=\"EDITFORM\"><TD NOWRAP><B>&nbsp;First Name        &nbsp;</B></TD><TD ALIGN=RIGHT><INPUT NAME=givenname TYPE=TEXT   value=\"",str2html(USER['givenname']), "\" SIZE=45 STYLE='width:255px'",disabled,"></TD></TR>\r\n",
		"<TR CLASS=\"EDITFORM\"><TD NOWRAP><B>&nbsp;Last Name         &nbsp;</B></TD><TD ALIGN=RIGHT><INPUT NAME=surname TYPE=TEXT     value=\"",str2html(USER['surname']), "\" SIZE=45 STYLE='width:255px'",disabled,"></TD></TR>\r\n",
		"</TABLE>\r\n",
		"</DIV>\r\n"
	);
	print(
		"<DIV ID=page4 STYLE='display: block'>\r\n",
		"<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=\"100%\">\r\n",
		"<TR CLASS=\"EDITFORM\"><TD NOWRAP><B>&nbsp;E-Mail        &nbsp;</B></TD><TD ALIGN=RIGHT><INPUT NAME=email TYPE=TEXT     value=\"",str2html(USER['email']), "\" SIZE=45 STYLE='width:255px'",disabled,"></TD></TR>\r\n",
		"</TABLE>\r\n",
		"</DIV>\r\n"
	);
	print("<DIV ID=page5 STYLE='display: block'>\r\n");
	print("<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=\"100%\">\r\n");
	print("<TR><TD></TD></TR>\r\n");
	print("</TABLE>\r\n");
	print("</DIV>\r\n");

	print("<DIV ID=page6 STYLE='display: block'>\r\n");
	print("<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=\"100%\">\r\n");
	print("<TR><TD></TD></TR>\r\n");
	print("</TABLE>\r\n");
	print("</DIV>\r\n");

	print("<HR>\r\n");
	print("</TD></TR>\r\n");
	if (id>0) {
//		if ((mod_notes_sublist=module_call("mod_notes_sublist"))!=NULL) {
			print("<TR><TD NOWRAP>");
			print("<TABLE BORDER=1 CELLPADDING=2 CELLSPACING=0 WIDTH=\"100%\" STYLE='border-style:solid'>\r\n");
			print("<TR><TH NOWRAP STYLE='border-style:solid'>Notes");
			print(" [<A HREF=\"/notes/editnew?table=users&amp;index=",id,"\">new</A>]");
			print("</TH></TR>\r\n");
//			mod_notes_sublist(conn, "users", id, 1);
			print("</TABLE>\r\n");
			print("</TD></TR>\r\n");
//		}
	}
	if (is_editable) {
		print("<TR><TD ALIGN=CENTER>\r\n");
		print("<INPUT TYPE=SUBMIT CLASS=frmButton NAME=Submit VALUE='Save'>\r\n");
		if (is_recycled) {
			print("<INPUT TYPE=SUBMIT CLASS=frmButton NAME=Submit VALUE='Force Save'>\r\n");
		}
//		if ((priv&A_DELETE)&&(id!=0)) {
		if (id>0) {
			print("<INPUT TYPE=SUBMIT CLASS=frmButton NAME=submit VALUE='Delete' onClick=\"ns.return ConfirmDelete();\">\r\n");
		}
		print("<INPUT TYPE=RESET CLASS=frmButton NAME=Reset VALUE='Reset'>\r\n");
		print("</TD></TR>\r\n");
	}
	print("</TABLE>\r\n");
	print("</FORM>\r\n");
	print("</CENTER>\r\n");
	print("<SCRIPT LANGUAGE=\"JavaScript\" type=\"text/javascript\">\r\n<!--\r\n");
	if ((id<1)||(is_recycled)) {
		print("showpage(2);\r\n");
		print("document.useredit.username.focus();\r\n");
	} else {
		print("showpage(1);\r\n");
	}
	print("// -->\r\n</SCRIPT>\r\n");

//	print("</CENTER><PRE>",serialize(Q),"</PRE>");
	Q=null;
	return;
}

function user_save() {
	local fields = {
		'username';
		'password';
		'givenname';
		'surname';
		'email';
	}
/*
	if (!(priv&A_ADMIN)) {
		print("<BR /><CENTER>%s</CENTER><BR />\r\n", lang_gets(conn, "common", "err_noaccess"));
		return;
	}
*/
	curdate=time.sqldatetime();
	if (_SERVER['REQUEST_METHOD']!='POST') return;
	if (_POST['ID']==null) return;
	id=tonumber(_POST['ID']);
	domainid=tonumber(_USER['domainid']);
	obj_did =tonumber(_USER['domainid']);
	if (id>0) {
		global Q=ldir.getentry("user", id);
	} else {
		//global Q={_tuples=1,_rows={[0]={id=0,pid=domainid,did=domainid,_data={cn='New User'}}}};
		global Q=default_user();
	}
	if (typeof(Q)=='null') {
		print("<CENTER>No matching record found for ",id,"</CENTER>\r\n");
		return;
	}
/*
	if (dbread_query(conn, 2, id, &qobj)!=0) {
		print("<BR /><CENTER>%s</CENTER><BR />\r\n", lang_gets(conn, "common", "err_noaccess"));
		return;
	}
	if (priv&A_ADMIN) {
		if ((ptemp=getpostenv(conn, "OBJ_UID"))!=NULL) query.obj_uid=atoi(ptemp);
		if ((ptemp=getpostenv(conn, "OBJ_GID"))!=NULL) query.obj_gid=atoi(ptemp);
	}
	if ((priv&A_ADMIN)||(query.obj_uid==conn->dat->uid)) {
		if ((ptemp=getpostenv(conn, "OBJ_GPERM"))!=NULL) query.obj_gperm=atoi(ptemp);
		if ((ptemp=getpostenv(conn, "OBJ_OPERM"))!=NULL) query.obj_operm=atoi(ptemp);
	}
*/
	user=Q['_rows'][0];
	foreach (field in fields) {
		if (field=='password') continue;
		local F=string.toupper(field);

		if (typeof(_POST[F])=='null') {
			print("Form is missing "+F+" = "+_POST[F].tostring()+"<BR>");
			continue;
		}
//		Q['_rows'][0]['_data'][string.tolower(field)] = _POST[F];
		user[string.tolower(field)] = _POST[F];
	}
	if (string.len(_POST['PASSWORD'])>0) {
		newpass=auth_md5pass(_POST['PASSWORD']);
		passchanged=true;
	} else {
		newpass=user['password'];
		passchanged=false;
	}
//	user.username=_POST['USERNAME'];
	user.obj_did=domainid;
	user.domainid=domainid;
	user.password=newpass;
//	user.email=_POST['EMAIL'];

//	printf("[%s][%s][%s]", _POST['PASSWORD'], user['password'], newpass);
//	print("</CENTER><PRE>",serialize(user),"</PRE>");

	if (_POST['SUBMIT']=="Delete") {
//		print("<BR>Delete does nothing yet.<BR>");
//		return;
/*
		if (!(auth_priv(sid, "admin")&A_ADMIN)||(userid<2)) {
			prints(sid, "<BR><CENTER>%s</CENTER><BR>\r\n", lang.err_noaccess);
			return;
		}
		if (sql_updatef("DELETE FROM gw_users WHERE userid = %d", user.userid)<0) return;
*/
		sqr=sqlquery(sprintf("DELETE FROM gw_users WHERE userid = %d", user.userid));
		print("</CENTER><PRE>",serialize(sqr),"</PRE>");

		print("<CENTER>User ",id," deleted successfully</CENTER><BR />\r\n");
//		db_log_activity(conn, "queries", id, "delete", "%s - %s deleted user %d", conn->socket.RemoteAddr, conn->dat->username, id);
	} else if (id==0) {
		sqr=sqlquery(sprintf("SELECT username FROM gw_users where username = '%s' AND domainid = %d", str2sql(user.username), user.domainid));
		if (sqr._tuples>0) {
			printf("<CENTER><B>User %s already exists</B></CENTER>\r\n", user.username);
			//adminuseredit(sid, &user);
			return;
		}
		if (string.len(user.username)<1) {
			printf("<CENTER><B>Username is too short</B></CENTER>\r\n");
			//adminuseredit(sid, &user);
			return;
		}

//		snprintf(user.password, sizeof(user.password)-1, "%s", auth_setpass(sid, user.password));
//		if (sql_query(&sqr, "SELECT max(userid) FROM gw_users")<0) return;
		sqr=sqlquery("SELECT max(userid) AS MAX FROM gw_users");
		//print("</CENTER><PRE>",serialize(sqr['_rows'][0]),"</PRE>");
		user.userid=tonumber(sqr['_rows'][0]['MAX'])+1;
		if (user.userid<1) user.userid=1;

//		memset(query, 0, sizeof(query));
		query=sprintf("INSERT INTO gw_users (userid, obj_ctime, obj_mtime, obj_uid, obj_gid, obj_did, obj_gperm, obj_operm, username, password, groupid, domainid, enabled, authdomainadmin, authadmin, authbookmarks, authcalendar, authcalls, authcontacts, authemail, authfiles, authfinance, authforums, authmessages, authprofile, authprojects, authquery, prefdaystart, prefdaylength, prefmailcurrent, prefmaildefault, prefmaxlist, prefmenustyle, preftimezone, prefgeozone, preflanguage, preftheme, availability, surname, givenname, jobtitle, division, supervisor, address, locality, region, country, postalcode, homenumber, worknumber, faxnumber, cellnumber, pagernumber, email, birthdate, hiredate, sin, isactive) values (");
		query+=sprintf("'%d', '%s', '%s', '%d', '%d', '%d', '%d', '%d', ", user.userid, curdate, curdate, user.obj_uid, user.obj_gid, user.domainid, user.obj_gperm, user.obj_operm);
		query+=sprintf("'%s', ", str2sql(user.username));
		query+=sprintf("'%s', ", user.password);
		query+=sprintf("'%d', ", user.groupid);
		query+=sprintf("'%d', ", user.domainid);
		query+=sprintf("'%d', ", user.enabled);
		query+=sprintf("'%d', ", user.authdomainadmin);
		query+=sprintf("'%d', ", user.authadmin);
		query+=sprintf("'%d', ", user.authbookmarks);
		query+=sprintf("'%d', ", user.authcalendar);
		query+=sprintf("'%d', ", user.authcalls);
		query+=sprintf("'%d', ", user.authcontacts);
		query+=sprintf("'%d', ", user.authemail);
		query+=sprintf("'%d', ", user.authfiles);
		query+=sprintf("'%d', ", user.authfinance);
		query+=sprintf("'%d', ", user.authforums);
		query+=sprintf("'%d', ", user.authmessages);
		query+=sprintf("'%d', ", user.authprofile);
		query+=sprintf("'%d', ", user.authprojects);
		query+=sprintf("'%d', ", user.authquery);
		query+=sprintf("'%d', ", user.prefdaystart);
		query+=sprintf("'%d', ", user.prefdaylength);
		query+=sprintf("'%d', ", user.prefmailcurrent);
		query+=sprintf("'%d', ", user.prefmaildefault);
		query+=sprintf("'%d', ", user.prefmaxlist);
		query+=sprintf("'%d', ", user.prefmenustyle);
		query+=sprintf("'%d', ", user.preftimezone);
		query+=sprintf("'%d', ", user.prefgeozone);
		query+=sprintf("'%s', ", str2sql(user.preflanguage));
		query+=sprintf("'%s', ", str2sql(user.preftheme));
		query+=sprintf("'%s', ", user.availability);
		query+=sprintf("'%s', ", str2sql(user.surname));
		query+=sprintf("'%s', ", str2sql(user.givenname));
		query+=sprintf("'%s', ", str2sql(user.jobtitle));
		query+=sprintf("'%s', ", str2sql(user.division));
		query+=sprintf("'%s', ", str2sql(user.supervisor));
		query+=sprintf("'%s', ", str2sql(user.address));
		query+=sprintf("'%s', ", str2sql(user.locality));
		query+=sprintf("'%s', ", str2sql(user.region));
		query+=sprintf("'%s', ", str2sql(user.country));
		query+=sprintf("'%s', ", str2sql(user.postalcode));
		query+=sprintf("'%s', ", str2sql(user.homenumber));
		query+=sprintf("'%s', ", str2sql(user.worknumber));
		query+=sprintf("'%s', ", str2sql(user.faxnumber));
		query+=sprintf("'%s', ", str2sql(user.cellnumber));
		query+=sprintf("'%s', ", str2sql(user.pagernumber));
//		query+=sprintf("'%s@%s', ", str2sql(user.username), str2sql(domain_getname(user.domainid)));
		query+=sprintf("'%s@%s', ", str2sql(user.username), str2sql("localhost"));
		query+=sprintf("'%s', ", user.birthdate);
		query+=sprintf("'%s', ", user.hiredate);
		query+=sprintf("'%s', ", str2sql(user.sin));
		query+=sprintf("'%s')", str2sql(user.isactive));

		print(query);

		//print("<BR>Insert does nothing yet.<BR>");
		//return;
		sqr=sqlquery(query);
		print("</CENTER><PRE>",serialize(sqr),"</PRE>");
/*
		if (sql_update(query)<0) return;
		db_log_activity(sid, "users", user.userid, "insert", "%s - %s added user %d", sid->dat->in_RemoteAddr, sid->dat->user_username, user.userid);
		prints(sid, "<CENTER>User added successfully</CENTER><BR>\r\n");
		memset(query, 0, sizeof(query));
		strcpy(query, "INSERT INTO gw_email_accounts (obj_ctime, obj_mtime, obj_uid, obj_gid, obj_did, obj_gperm, obj_operm, accountname, realname, organization, address, replyto, hosttype, pophost, popport, smtphost, smtpport, popusername, poppassword, smtpauth, lastcount, notify, remove, showdebug, signature) values (");
		query+=sprintf("'%s', '%s', '%d', '0', '%d', '0', '0', 'Local Mail', ", curdate, curdate, user.userid, user.domainid);
		query+=sprintf("'%s %s', '', ", str2sql(user.givenname), str2sql(user.surname));
		query+=sprintf("'%s@%s', '', ", str2sql(user.username), str2sql(domain_getname(user.domainid)));
		query+=sprintf("'POP3', 'localhost', '110', 'localhost', '25', ");
		query+=sprintf("'%s@%s', ", str2sql(user.username), str2sql(domain_getname(user.domainid)));
//		query+=sprintf("'%s', ", str2sql(EncodeBase64string(sid, mailacct.poppassword)));
		query+=sprintf("'', 'n', '0', '0', '2', 'n', '')");
		if (sql_update(query)<0) return;
		if (sql_queryf(&sqr, "SELECT mailaccountid FROM gw_email_accounts WHERE obj_uid = %d AND obj_did = %d", user.userid, user.domainid)<0) return;
		if (sql_numtuples(&sqr)>0) {
			j=atoi(sql_getvalue(&sqr, 0, 0));
			if (sql_updatef("UPDATE gw_users SET prefmailcurrent = %d WHERE userid = %d AND domainid = %d", j, user.userid, user.domainid)<0) return;
		}
		sql_freeresult(&sqr);
//		wmfolder_makedefaults(sid, mailacct.mailaccountid);
//		db_log_activity(sid, "mailaccounts", mailacct.mailaccountid, "insert", "%s - %s added mail account %d", sid->dat->in_RemoteAddr, sid->dat->user_username, mailacct.mailaccountid);
		prints(sid, "<CENTER>E-Mail account added successfully</CENTER><BR>\r\n");
		if (dirmake("%s/%04d/files/users/%s", config->dir_var_domains, user.domainid, user.username)!=0) return;
*/
		spooldir=sprintf("%s/%s/mailspool/%s", MASTERGLOBAL['CONFIG']['var_domains_path'], string.sub('0000'+user.domainid.tostring(), -4), user.username)
		printf("spooldir=[%s]", spooldir);
		file.mkdir(spooldir);
//		if (dirmake("%s/%04d/mailspool/%s", config->dir_var_domains, user.domainid, user.username)!=0) return;
/*
		if (dirmake("%s/%04d/mailspool/%s", config->dir_var_domains, user.domainid, user.username)!=0) return;
		if (sql_updatef("INSERT INTO gw_files (obj_ctime, obj_mtime, obj_uid, obj_gid, obj_did, obj_gperm, obj_operm, filepath, filename, filetype, uldate, lastdldate, numdownloads, description) VALUES ('%s', '%s', '%d', '0', '%d', '1', '1', '/files/users/', '%s', 'dir', '%s', '%s', '0', '')", curdate, curdate, user.userid, user.domainid, user.username, curdate, curdate)<0) return;
		if (sql_queryf(&sqr, "SELECT folderid FROM gw_bookmarks_folders WHERE parentid = 0 AND obj_did = %d AND foldername = 'users'", user.domainid)<0) return;
		if (sql_numtuples(&sqr)==1) {
			j=atoi(sql_getvalue(&sqr, 0, 0));
			if (sql_updatef("INSERT INTO gw_bookmarks_folders (obj_ctime, obj_mtime, obj_uid, obj_gid, obj_did, obj_gperm, obj_operm, parentid, foldername) VALUES ('%s', '%s', '%d', '0', '%d', '1', '1', '%d', '%s')", curdate, curdate, user.userid, user.domainid, j, user.username)<0) return;
		}
		sql_freeresult(&sqr);
		prints(sid, "<CENTER>Home folders added successfully</CENTER><BR>\r\n");
*/

		print("<CENTER>User ",id," added successfully</CENTER><BR />\r\n");
//		db_log_activity(conn, "queries", id, "insert", "%s - %s added user %d", conn->socket.RemoteAddr, conn->dat->username, id);
	} else {
//		if (!(auth_priv(sid, "admin")&A_ADMIN)) {
//			prints(sid, "<CENTER>%s</CENTER><BR>\r\n", lang.err_noaccess);
//			return;
//		}
		sqr=sqlquery(sprintf("SELECT username FROM gw_users where username = '%s' and userid <> %d AND domainid = %d", str2sql(user.username), user.userid, user.domainid));
		if (sqr._tuples>0) {
			printf("<CENTER><B>User %s already exists</B></CENTER>\r\n", user.username);
			//adminuseredit(sid, &user);
			return;
		}
		if (string.len(user.username)<1) {
			printf("<CENTER><B>Username is too short</B></CENTER>\r\n");
			//adminuseredit(sid, &user);
			return;
		}
//		if (newpass) {
//			snprintf(user.password, sizeof(user.password)-1, "%s", auth_setpass(sid, user.password));
//		}
		query=sprintf("UPDATE gw_users SET obj_mtime = '%s', obj_uid = '%d', obj_gid = '%d', obj_gperm = '%d', obj_operm = '%d', ", curdate, user.obj_uid, user.obj_gid, user.obj_gperm, user.obj_operm);
		query+=sprintf("username = '%s', ", str2sql(user.username));
		query+=sprintf("password = '%s', ", str2sql(user.password));
		query+=sprintf("groupid = '%d', ", user.groupid);
		query+=sprintf("domainid = '%d', ", user.domainid);
		query+=sprintf("enabled = '%d', ", user.enabled);
		query+=sprintf("authdomainadmin = '%d', ", user.authdomainadmin);
		query+=sprintf("authadmin = '%d', ", user.authadmin);
		query+=sprintf("authbookmarks = '%d', ", user.authbookmarks);
		query+=sprintf("authcalendar = '%d', ", user.authcalendar);
		query+=sprintf("authcalls = '%d', ", user.authcalls);
		query+=sprintf("authcontacts = '%d', ", user.authcontacts);
		query+=sprintf("authemail = '%d', ", user.authemail);
		query+=sprintf("authfiles = '%d', ", user.authfiles);
		query+=sprintf("authfinance = '%d', ", user.authfinance);
		query+=sprintf("authforums = '%d', ", user.authforums);
		query+=sprintf("authmessages = '%d', ", user.authmessages);
		query+=sprintf("authprofile = '%d', ", user.authprofile);
		query+=sprintf("authprojects = '%d', ", user.authprojects);
		query+=sprintf("authquery = '%d', ", user.authquery);
		query+=sprintf("prefdaystart = '%d', ", user.prefdaystart);
		query+=sprintf("prefdaylength = '%d', ", user.prefdaylength);
		query+=sprintf("prefmailcurrent = '%d', ", user.prefmailcurrent);
		query+=sprintf("prefmaildefault = '%d', ", user.prefmaildefault);
		query+=sprintf("prefmaxlist = '%d', ", user.prefmaxlist);
		query+=sprintf("prefmenustyle = '%d', ", user.prefmenustyle);
		query+=sprintf("preftimezone = '%d', ", user.preftimezone);
		query+=sprintf("prefgeozone = '%d', ", user.prefgeozone);
		query+=sprintf("preflanguage = '%s', ", str2sql(user.preflanguage));
		query+=sprintf("preftheme = '%s', ", str2sql(user.preftheme));
		query+=sprintf("availability = '%s', ", user.availability);
		query+=sprintf("surname = '%s', ", str2sql(user.surname));
		query+=sprintf("givenname = '%s', ", str2sql(user.givenname));
		query+=sprintf("jobtitle = '%s', ", str2sql(user.jobtitle));
		query+=sprintf("division = '%s', ", str2sql(user.division));
		query+=sprintf("supervisor = '%s', ", str2sql(user.supervisor));
		query+=sprintf("address = '%s', ", str2sql(user.address));
		query+=sprintf("locality = '%s', ", str2sql(user.locality));
		query+=sprintf("region = '%s', ", str2sql(user.region));
		query+=sprintf("country = '%s', ", str2sql(user.country));
		query+=sprintf("postalcode = '%s', ", str2sql(user.postalcode));
		query+=sprintf("homenumber = '%s', ", str2sql(user.homenumber));
		query+=sprintf("worknumber = '%s', ", str2sql(user.worknumber));
		query+=sprintf("faxnumber = '%s', ", str2sql(user.faxnumber));
		query+=sprintf("cellnumber = '%s', ", str2sql(user.cellnumber));
		query+=sprintf("pagernumber = '%s', ", str2sql(user.pagernumber));
		query+=sprintf("email = '%s', ", str2sql(user.email));
		query+=sprintf("birthdate = '%s', ", user.birthdate);
		query+=sprintf("hiredate = '%s', ", user.hiredate);
		query+=sprintf("sin = '%s', ", str2sql(user.sin));
		query+=sprintf("isactive = '%s'", str2sql(user.isactive));
		query+=sprintf(" WHERE userid = %d", user.userid);
		print(query);
		sqr=sqlquery(query);
		print("</CENTER><PRE>",serialize(sqr),"</PRE>");
		print("<CENTER>User ",id," modified successfully</CENTER><BR />\r\n");
//		db_log_activity(conn, "queries", id, "modify", "%s - %s modified user %d", conn->socket.RemoteAddr, conn->dat->username, id);
	}
//	print("<SCRIPT LANGUAGE=JavaScript TYPE=text/javascript>\r\n<!--\r\nlocation.replace(\"%s/search/sqlrun\");\r\n// -->\r\n</SCRIPT>\r\n", nes_getstr(conn->N, htobj, "SCRIPT_NAME"));
//	print("<NOSCRIPT><META HTTP-EQUIV=\"Refresh\" CONTENT=\"1; URL=%s/search/sqlrun\"></NOSCRIPT>\r\n", nes_getstr(conn->N, htobj, "SCRIPT_NAME"));
	return;
}
