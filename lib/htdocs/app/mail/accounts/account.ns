
function view_mailaccount(id) {
	var method=_SERVER['REQUEST_METHOD'];
	if (id==null) id=tonumber((method=='POST')?_POST['MAILACCOUNTID']:_GET['ID']);
	Q=db.mailaccounts.get(id);
	MAILACCOUNT=Q.rows[0];
	if (Q==null || MAILACCOUNT==null) {
		print("<CENTER>No matching record found for ",id,"</CENTER>\r\n");
		return;
	}
	var form=new html_form(MAILACCOUNT);
	print("<form id=mailaccountedit name=mailaccountedit METHOD=POST ACTION=\"/app/mail/accounts/account\" onsubmit=\"return ns.dialog.submit(event, 'mailaccount', 'save');\" enctype='multipart/form-data'>\r\n");
	form.addfield({name="mailaccountid", type="hidden"});
	print("<table class=\"contentform\">\r\n");
	form.addfield({name="accountname",  label="Account Name", required=true});
	form.addfield({name="realname",     label="Real Name"});
	form.addfield({name="organization", label="Organization"});
	form.addfield({name="address",      label="E-Mail Address"});
	form.addfield({name="replyto",      label="Reply Address"});
	form.addfield({name="hosttype",     label="Host Type"});
	form.addfield({name="popusername",  label="POP3 Username"});
	form.addfield({name="poppassword",  label="POP3 Password", type="password"});
	form.addfield({name="pophost",      label="POP3 Host"});
	form.addfield({name="popport",      label="POP3 Port"});
	form.addfield({name="popssl",       label="POP3 Uses SSL"});
	form.addfield({name="smtpauth",     label="SMTP Auth"});
	form.addfield({name="smtphost",     label="SMTP Host"});
	form.addfield({name="smtpport",     label="SMTP Port"});
	form.addfield({name="smtpssl",      label="SMTP Uses SSL"});
	form.addfield({name="notify",       label="Check for new mail"});
	form.addfield({name="remove",       label="Remove from server"});
	form.addfield({name="showdebug",    label="Show Debug"});
	form.addfield({name="signature",    label="Signature", type="textarea"});
	form.addfield({name="lastcount",    type="hidden"});
	form.addfield({name="lastcheck",    type="hidden"});
	print("</table>\r\n");
	form.validate("gw_email_accounts");
	print("<input type=hidden name=submitaction value=''>\r\n");
	print("<input type=submit class=frmButton name=Submit value='Save'>\r\n");
	if (id>0) {
		print("<INPUT TYPE=SUBMIT CLASS=frmButton NAME=submit VALUE='Delete' onClick=\"return ns.dialog.submit(event, 'mailaccount', 'delete');\">\r\n");
	}
	print("<INPUT TYPE=RESET CLASS=frmButton NAME=Reset VALUE='Reset'>\r\n");
	print("</form>\r\n");
	return;
}

function save_mailaccount() {
	if (_SERVER['REQUEST_METHOD']!='POST') return;
	id=tonumber(_POST['MAILACCOUNTID']);
	Q=db.mailaccounts.get(id);
	MAILACCOUNT=Q.rows[0];
	//printf("<hr><pre>_POST=[%s]</pre>", serialize(_POST));
	//printf("<hr><pre>MAILACCOUNT=[%s]</pre>", serialize(MAILACCOUNT));
	if (Q==null || MAILACCOUNT==null) {
		print("<center>No matching record found for ",id,"</center>\r\n");
		return;
	}
	switch (_POST['SUBMITACTION']) {
	case 'save':
		MAILACCOUNT['accountname'] =_POST['ACCOUNTNAME'];
		MAILACCOUNT['realname']    =_POST['REALNAME'];
		MAILACCOUNT['organization']=_POST['ORGANIZATION'];
		MAILACCOUNT['address']     =_POST['ADDRESS'];
		MAILACCOUNT['replyto']     =_POST['REPLYTO'];
		MAILACCOUNT['hosttype']    =_POST['HOSTTYPE'];
		MAILACCOUNT['popusername'] =_POST['POPUSERNAME'];
		if (_POST['POPPASSWORD']!="") {
			MAILACCOUNT['poppassword']=net.mime.base64.encode(_POST['POPPASSWORD']);
		}
		MAILACCOUNT['pophost']     =_POST['POPHOST'];
		MAILACCOUNT['popport']     =_POST['POPPORT'];
		MAILACCOUNT['popssl']      =_POST['POPSSL'];
		MAILACCOUNT['smtpauth']    =_POST['SMTPAUTH'];
		MAILACCOUNT['smtphost']    =_POST['SMTPHOST'];
		MAILACCOUNT['smtpport']    =_POST['SMTPPORT'];
		MAILACCOUNT['smtpssl']     =_POST['SMTPSSL'];
		MAILACCOUNT['notify']      =_POST['NOTIFY'];
		MAILACCOUNT['remove']      =_POST['REMOVE'];
		MAILACCOUNT['showdebug']   =_POST['SHOWDEBUG'];
		MAILACCOUNT['signature']   =_POST['SIGNATURE'];
		db.mailaccounts.set(MAILACCOUNT);
		printf("mailaccount %d saved", MAILACCOUNT['mailaccountid']);
		view_mailaccount(MAILACCOUNT['mailaccountid']);
		break;
	case 'delete':
		db.mailaccounts.remove(MAILACCOUNT);
		printf("mail account %d removed", MAILACCOUNT['mailaccountid']);
		break;
	}
	printf("<script>\r\nns.GoTo('/app/mail/accounts/list');\r\n</script>\r\n");
	return;
}

try {
	include_template("common.ns");
	include("../mail.lib.ns");
	print("<center>\r\n");
	if (_SERVER['REQUEST_METHOD']=='POST') {
		save_mailaccount();
	} else {
		view_mailaccount();
	}
	print("</center>\r\n");
} catch (e) {
	print("Exception: [",e.description,"]");
}
