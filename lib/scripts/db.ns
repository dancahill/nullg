namespace db {
	class userinfo {
		function userinfo() {
			this.userid = tonumber(_USER['userid']);
			if (this.userid==0) throw "authentication required";
			//this.info = {
	//			var maildefault = tonumber(_USER['pref']['maildefault']);
	//			var maxlist     = tonumber(_USER['pref']['maxlist']);
	//			var menustyle   = tonumber(_USER['pref']['menustyle']);
	//			var userid      = tonumber(_USER['userid']);
	//			var offset=0;
				this.userid   = tonumber(_USER['userid']);
				this.groupid  = tonumber(_USER['groupid']);
				this.domainid = tonumber(_USER['obj_did']);
				this.username = _USER['username'];
			//};
			//print(serialize(_USER));
		}
	};

	function getblanksqr(tablename) {
		var userinfo = db.getuserinfo();
		sqr = {
			_tuples = 1;
			_rows = {
				[0] = {
				}
			}
		};
		row=sqr['_rows'][0];
		if (db.schema==null) {
			throw "db.schema not found - include db.schema.ns from "+_filename;
		}
		foreach (table in db.schema) {
			if (table.name!=tablename) continue;
			foreach (field in table.fields) {
				if (field[1]=='integer') {
					row[field[0]]=0;
				} else {
					row[field[0]]="";
				}
			}
			sqr['_rows'][0]['obj_did']=userinfo.domainid;
			sqr['_rows'][0]['obj_uid']=userinfo.userid;
			return sqr;
		}
		return null;
	}
	function getuserinfo() {
		userid = tonumber(_USER['userid']);
		if (userid==0) throw "authentication required";
		var info = {
//			var maildefault = tonumber(_USER['pref']['maildefault']);
//			var maxlist     = tonumber(_USER['pref']['maxlist']);
//			var menustyle   = tonumber(_USER['pref']['menustyle']);
//			var userid      = tonumber(_USER['userid']);
//			var offset=0;
			userid   = tonumber(_USER['userid']);
			groupid  = tonumber(_USER['groupid']);
			domainid = tonumber(_USER['obj_did']);
			username = _USER['username'];
		};
		//print(serialize(_USER));
		return info;
	}
	function createtemplate(tablename) {
		foreach (t in db.schema) {
			if (t.name!=tablename) continue;
			a="";
			b="";
			foreach (f in t.fields) {
				fname=f[0];
				if (a!="") a+=",";
				a+=fname;
				if (b!="") b+=",";
				b+="?";
			}
			printf("c = new sqlcommand(\"INSERT INTO %s (%s) VALUES (%s);\");\r\n", tablename, a, b);

			printf("c.addvalue('obj_ctime', time.sqltime(time.gmtime()));\r\n");
			printf("c.addvalue('obj_mtime', time.sqltime(time.gmtime()));\r\n");
			printf("c.addvalue('obj_uid', userinfo.userid);\r\n");
			printf("c.addvalue('obj_gid', userinfo.groupid);\r\n");
			printf("c.addvalue('obj_did', userinfo.domainid);\r\n");
			printf("c.addvalue('obj_gperm', 0);\r\n");
			printf("c.addvalue('obj_operm', 0);\r\n");

			foreach (f in t.fields) {
				fname=f[0];
				if (fname.startswith("obj_")) continue;
				printf("c.addvalue(\"%s\", record[\"%s\"]);\r\n", fname, fname);
			}
			a="";
			b="";
			first=true;
			foreach (f in t.fields) {
				fname=f[0];
				if (fname=="obj_ctime") continue;
				if (first) {
					first=false;
					b=sprintf("WHERE %s=?", fname);
				} else {
					if (a!="") a+=",";
					a+=sprintf("%s=?", fname);
				}
			}
			printf("c = new sqlcommand(\"UPDATE %s SET %s %s;\");\r\n", tablename, a, b);

			printf("c.addvalue('obj_mtime', time.sqltime(time.gmtime()));\r\n");

			first=true;
			foreach (f in t.fields) {
				fname=f[0];
				if (fname=="obj_ctime"||fname=="obj_mtime") continue;
				if (first) {
					first=false;
					b=sprintf("c.addvalue(\"%s\", record[\"%s\"]);\r\n", fname, fname);
				} else {
					printf("c.addvalue(\"%s\", record[\"%s\"]);\r\n", fname, fname);
				}
			}
			printf("%s", b);


			foreach (f in t.fields) {
				fname=f[0];
				printf("record[\"%s\"] = _POST[\"%s\"];\r\n", fname, fname.toupper());
				//CONTACT['surname'] =_POST['SURNAME'];
			}
		}
	}
	admin = {
		domains = {
			function getlist() {
				var userinfo = db.getuserinfo();
				query=sprintf("SELECT * FROM gw_domains;");
				sqr=sqlquery(query);
				return sqr;
			}
			function getuser(id) {
			}
		};
		users = {
			function getlist() {
				var userinfo = db.getuserinfo();
				query=sprintf("SELECT * FROM gw_users;");
				sqr=sqlquery(query);
				return sqr;
			}
			function getuser(id) {
			}
		};
	};
	bookmarks = {
		function getcurrentfolder() {
			var userinfo = db.getuserinfo();
			currentfolder={ id=0, parentid=-1, name="Bookmarks" };
			if (_GET['FOLDERID']==null) {
				c = new sqlcommand("SELECT * FROM gw_bookmarks_folders WHERE parentid = 0 AND foldername = 'users';");
				q1=sqlquery(c.tostring());

				if (q1._tuples!=1) return currentfolder;
				currentfolder={ id=tonumber(q1['_rows'][0]['folderid']), name=q1['_rows'][0]['foldername'] };

				c = new sqlcommand("SELECT * FROM gw_bookmarks_folders WHERE parentid = ? AND foldername = ?;");
				c.addvalue('parentid', currentfolder.id);
				c.addvalue('foldername', _USER['username']);
				q2=sqlquery(c.tostring());

				if (q2._tuples!=1) return currentfolder;
				currentfolder={ id=tonumber(q2['_rows'][0]['folderid']), parentid=tonumber(q2['_rows'][0]['parentid']), name=q2['_rows'][0]['foldername'] };
			} else {
				id=tonumber(_GET['FOLDERID']);
				q1=sqlquery(sprintf("SELECT * FROM gw_bookmarks_folders WHERE folderid = %d;", id));
				if (q1._tuples!=1)  return currentfolder;
				currentfolder={ id=tonumber(q1['_rows'][0]['folderid']), parentid=tonumber(q1['_rows'][0]['parentid']), name=q1['_rows'][0]['foldername'] };
			}
			return currentfolder;
		}
		function getlist(folderid) {
			var userinfo = db.getuserinfo();
			query=sprintf("SELECT * FROM gw_bookmarks WHERE folderid = %d ORDER BY bookmarkname;", folderid);
			sqr=sqlquery(query);
			return sqr;
		}
		function getfolderlist(folderid) {
			var userinfo = db.getuserinfo();
			query=sprintf("SELECT * FROM gw_bookmarks_folders WHERE parentid = %d ORDER BY foldername;", folderid);
			sqr=sqlquery(query);
			return sqr;
		}
		function getbookmark(id) {
			var userinfo = db.getuserinfo();
			id=tonumber(id);
			if (id==0) {
				bookmark = db.getblanksqr("gw_bookmarks");
				if (_GET['FOLDERID']!=null) {
					bookmark['_rows'][0]['folderid']=tonumber(_GET['FOLDERID']);
				} else {
					var currentfolder=db.bookmarks.getcurrentfolder();
					bookmark['_rows'][0]['folderid']=currentfolder.id;
				}
				bookmark['_rows'][0]['bookmarkname']='New Bookmark';
				bookmark['_rows'][0]['bookmarkurl']='http://';
				return bookmark;
			}
			sqr=sqlquery("select * from gw_bookmarks where bookmarkid = "+id+";");
			return sqr;
		}
		function getfolder(id) {
			var userinfo = db.getuserinfo();
			id=tonumber(id);
			if (id==0) {
				folder = db.getblanksqr("gw_bookmarks_folders");
				if (_GET['PARENTID']!=null) {
					folder['_rows'][0]['parentid']=tonumber(_GET['PARENTID']);
				} else {
					var currentfolder=db.bookmarks.getcurrentfolder();
					folder['_rows'][0]['parentid']=currentfolder.id;
				}
				folder['_rows'][0]['foldername']='New Bookmark Folder';
				return folder;
			}
			sqr=sqlquery("select * from gw_bookmarks_folders where folderid = "+id+";");
			return sqr;
		}
		function setbookmark(bookmark) {
			var userinfo = db.getuserinfo();
			if (bookmark['bookmarkid']==0) {
				newid=sqlgetsequence("gw_bookmarks");
				if (newid<1) {
					printf("newid<1 '%d' ??", newid);
					return;
				}
				bookmark['bookmarkid']=newid;
				c = new sqlcommand("INSERT INTO gw_bookmarks (bookmarkid,obj_ctime,obj_mtime,obj_uid,obj_gid,obj_did,obj_gperm,obj_operm,folderid,bookmarkname,bookmarkurl) VALUES (?,?,?,?,?,?,?,?,?,?,?);");
				c.addvalue('bookmarkid', tonumber(bookmark['bookmarkid']));
				c.addvalue('obj_ctime', time.sqltime());
				c.addvalue('obj_mtime', time.sqltime());
				c.addvalue('obj_uid', userinfo.userid);
				c.addvalue('obj_gid', userinfo.groupid);
				c.addvalue('obj_did', userinfo.domainid);
				c.addvalue('obj_gperm', 0);
				c.addvalue('obj_operm', 0);
				c.addvalue('folderid', tonumber(bookmark['folderid']));
				c.addvalue('bookmarkname', bookmark['bookmarkname']);
				c.addvalue('bookmarkurl', bookmark['bookmarkurl']);
				sqlupdate(c.tostring());
			} else {
				c = new sqlcommand("UPDATE gw_bookmarks SET obj_mtime=?,obj_uid=?,obj_gid=?,obj_did=?,obj_gperm=?,obj_operm=?,folderid=?,bookmarkname=?,bookmarkurl=? WHERE bookmarkid=?;");
				c.addvalue('obj_mtime', time.sqltime());
				c.addvalue('obj_uid', tonumber(bookmark['obj_uid']));
				c.addvalue('obj_gid', tonumber(bookmark['obj_gid']));
				c.addvalue('obj_did', tonumber(bookmark['obj_did']));
				c.addvalue('obj_gperm', tonumber(bookmark['obj_gperm']));
				c.addvalue('obj_operm', tonumber(bookmark['obj_operm']));
				c.addvalue('folderid', tonumber(bookmark['folderid']));
				c.addvalue('bookmarkname', bookmark['bookmarkname']);
				c.addvalue('bookmarkurl', bookmark['bookmarkurl']);
				c.addvalue('bookmarkid', tonumber(bookmark['bookmarkid']));
				sqlupdate(c.tostring());
			}
			//printf("[%s]", c.tostring());
		}
		function setfolder(folder) {
			var userinfo = db.getuserinfo();
			if (folder['folderid']==0) {
				newid=sqlgetsequence("gw_bookmarks_folders");
				if (newid<1) {
					printf("newid<1 '%d' ??", newid);
					return;
				}
				folder['folderid']=newid;
				c = new sqlcommand("INSERT INTO gw_bookmarks_folders (folderid,obj_ctime,obj_mtime,obj_uid,obj_gid,obj_did,obj_gperm,obj_operm,parentid,foldername) VALUES (?,?,?,?,?,?,?,?,?,?);");
				c.addvalue('folderid', tonumber(folder['folderid']));
				c.addvalue('obj_ctime', time.sqltime());
				c.addvalue('obj_mtime', time.sqltime());
				c.addvalue('obj_uid', userinfo.userid);
				c.addvalue('obj_gid', userinfo.groupid);
				c.addvalue('obj_did', userinfo.domainid);
				c.addvalue('obj_gperm', 0);
				c.addvalue('obj_operm', 0);
				c.addvalue('parentid', tonumber(folder['parentid']));
				c.addvalue('foldername', folder['foldername']);
				sqlupdate(c.tostring());
			} else {
				c = new sqlcommand("UPDATE gw_bookmarks_folders SET obj_mtime=?,obj_uid=?,obj_gid=?,obj_did=?,obj_gperm=?,obj_operm=?,parentid=?,foldername=? WHERE folderid=?;");
				c.addvalue('obj_mtime', time.sqltime());
				c.addvalue('obj_uid', tonumber(folder['obj_uid']));
				c.addvalue('obj_gid', tonumber(folder['obj_gid']));
				c.addvalue('obj_did', tonumber(folder['obj_did']));
				c.addvalue('obj_gperm', tonumber(folder['obj_gperm']));
				c.addvalue('obj_operm', tonumber(folder['obj_operm']));
				c.addvalue('parentid', tonumber(folder['parentid']));
				c.addvalue('foldername', folder['foldername']);
				c.addvalue('folderid', tonumber(folder['folderid']));
				sqlupdate(c.tostring());
			}
			//printf("[%s]", c.tostring());
		}
		function deletebookmark(bookmark) {
			c = new sqlcommand("DELETE FROM gw_bookmarks WHERE bookmarkid=?;");
			c.addvalue('bookmarkid', bookmark['bookmarkid']);
			sqlupdate(c.tostring());
		}
		function deletefolder(folder) {
			c = new sqlcommand("DELETE FROM gw_bookmarks_folders WHERE folderid=?;");
			c.addvalue('folderid', folder['folderid']);
			sqlupdate(c.tostring());
		}
	};
	contacts = {
		function getlist() {
			var userinfo = db.getuserinfo();
			if (_SERVER['REQUEST_METHOD']=='POST' && _POST['SEARCHTEXT']!=null) {
				var text=sql_escape(_POST['SEARCHTEXT'].tolower());
				query="SELECT * FROM gw_contacts WHERE";
				query+=" LOWER(surname) LIKE '%"+text+"%'";
				query+=" OR LOWER(givenname) LIKE '%"+text+"%'";
				query+=" OR LOWER(organization) LIKE '%"+text+"%'";
				query+=" ORDER BY UPPER(surname);";
				sqr=sqlquery(query);
			} else {
				sqr=sqlquery("SELECT * FROM gw_contacts ORDER BY UPPER(surname);");
			}
			return sqr;
		}
		function get(id) {
			var userinfo = db.getuserinfo();
			id=tonumber(id);
			if (id==0) {
				contact = db.getblanksqr("gw_contacts");
				contact['_rows'][0]['surname']='New Contact';
				//contact = {_tuples=1,_rows={[0]={id=0,pid=tonumber(_USER['domainid']),did=tonumber(_USER['domainid']),_data={cn='New Contact'}}}};
				return contact;
			}
			sqr=sqlquery("select * from gw_contacts where contactid = "+id+";");
			return sqr;
		}
		function set(record) {
			var userinfo = db.getuserinfo();
			if (record['contactid']==0) {
				newid=sqlgetsequence("gw_contacts");
				if (newid<1) {
					printf("newid<1 '%d' ??", newid);
					return;
				}
				record['contactid']=newid;
				c = new sqlcommand("INSERT INTO gw_contacts (contactid,obj_ctime,obj_mtime,obj_uid,obj_gid,obj_did,obj_gperm,obj_operm,folderid,username,password,enabled,geozone,timezone,surname,givenname,salutation,contacttype,referredby,altcontact,prefbilling,email,website,website2,website3,website4,website5,homenumber,worknumber,faxnumber,mobilenumber,jobtitle,organization,homeaddress,homelocality,homeregion,homecountry,homepostalcode,workaddress,worklocality,workregion,workcountry,workpostalcode) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);");
				c.addvalue("contactid", tonumber(record["contactid"]));
				c.addvalue('obj_ctime', time.sqltime());
				c.addvalue('obj_mtime', time.sqltime());
				c.addvalue('obj_uid', userinfo.userid);
				c.addvalue('obj_gid', userinfo.groupid);
				c.addvalue('obj_did', userinfo.domainid);
				c.addvalue('obj_gperm', 0);
				c.addvalue('obj_operm', 0);
				c.addvalue("folderid", record["folderid"]);
				c.addvalue("username", record["username"]);
				c.addvalue("password", record["password"]);
				c.addvalue("enabled", record["enabled"]);
				c.addvalue("geozone", record["geozone"]);
				c.addvalue("timezone", record["timezone"]);
				c.addvalue("surname", record["surname"]);
				c.addvalue("givenname", record["givenname"]);
				c.addvalue("salutation", record["salutation"]);
				c.addvalue("contacttype", record["contacttype"]);
				c.addvalue("referredby", record["referredby"]);
				c.addvalue("altcontact", record["altcontact"]);
				c.addvalue("prefbilling", record["prefbilling"]);
				c.addvalue("email", record["email"]);
				c.addvalue("website", record["website"]);
				c.addvalue("website2", record["website2"]);
				c.addvalue("website3", record["website3"]);
				c.addvalue("website4", record["website4"]);
				c.addvalue("website5", record["website5"]);
				c.addvalue("homenumber", record["homenumber"]);
				c.addvalue("worknumber", record["worknumber"]);
				c.addvalue("faxnumber", record["faxnumber"]);
				c.addvalue("mobilenumber", record["mobilenumber"]);
				c.addvalue("jobtitle", record["jobtitle"]);
				c.addvalue("organization", record["organization"]);
				c.addvalue("homeaddress", record["homeaddress"]);
				c.addvalue("homelocality", record["homelocality"]);
				c.addvalue("homeregion", record["homeregion"]);
				c.addvalue("homecountry", record["homecountry"]);
				c.addvalue("homepostalcode", record["homepostalcode"]);
				c.addvalue("workaddress", record["workaddress"]);
				c.addvalue("worklocality", record["worklocality"]);
				c.addvalue("workregion", record["workregion"]);
				c.addvalue("workcountry", record["workcountry"]);
				c.addvalue("workpostalcode", record["workpostalcode"]);
				sqlupdate(c.tostring());
			} else {
				c = new sqlcommand("UPDATE gw_contacts SET obj_mtime=?,obj_uid=?,obj_gid=?,obj_did=?,obj_gperm=?,obj_operm=?,folderid=?,username=?,password=?,enabled=?,geozone=?,timezone=?,surname=?,givenname=?,salutation=?,contacttype=?,referredby=?,altcontact=?,prefbilling=?,email=?,website=?,website2=?,website3=?,website4=?,website5=?,homenumber=?,worknumber=?,faxnumber=?,mobilenumber=?,jobtitle=?,organization=?,homeaddress=?,homelocality=?,homeregion=?,homecountry=?,homepostalcode=?,workaddress=?,worklocality=?,workregion=?,workcountry=?,workpostalcode=? WHERE contactid=?;");
				c.addvalue('obj_mtime', time.sqltime());
				c.addvalue('obj_uid', tonumber(record['obj_uid']));
				c.addvalue('obj_gid', tonumber(record['obj_gid']));
				c.addvalue('obj_did', tonumber(record['obj_did']));
				c.addvalue('obj_gperm', tonumber(record['obj_gperm']));
				c.addvalue('obj_operm', tonumber(record['obj_operm']));
				c.addvalue("folderid", record["folderid"]);
				c.addvalue("username", record["username"]);
				c.addvalue("password", record["password"]);
				c.addvalue("enabled", record["enabled"]);
				c.addvalue("geozone", record["geozone"]);
				c.addvalue("timezone", record["timezone"]);
				c.addvalue("surname", record["surname"]);
				c.addvalue("givenname", record["givenname"]);
				c.addvalue("salutation", record["salutation"]);
				c.addvalue("contacttype", record["contacttype"]);
				c.addvalue("referredby", record["referredby"]);
				c.addvalue("altcontact", record["altcontact"]);
				c.addvalue("prefbilling", record["prefbilling"]);
				c.addvalue("email", record["email"]);
				c.addvalue("website", record["website"]);
				c.addvalue("website2", record["website2"]);
				c.addvalue("website3", record["website3"]);
				c.addvalue("website4", record["website4"]);
				c.addvalue("website5", record["website5"]);
				c.addvalue("homenumber", record["homenumber"]);
				c.addvalue("worknumber", record["worknumber"]);
				c.addvalue("faxnumber", record["faxnumber"]);
				c.addvalue("mobilenumber", record["mobilenumber"]);
				c.addvalue("jobtitle", record["jobtitle"]);
				c.addvalue("organization", record["organization"]);
				c.addvalue("homeaddress", record["homeaddress"]);
				c.addvalue("homelocality", record["homelocality"]);
				c.addvalue("homeregion", record["homeregion"]);
				c.addvalue("homecountry", record["homecountry"]);
				c.addvalue("homepostalcode", record["homepostalcode"]);
				c.addvalue("workaddress", record["workaddress"]);
				c.addvalue("worklocality", record["worklocality"]);
				c.addvalue("workregion", record["workregion"]);
				c.addvalue("workcountry", record["workcountry"]);
				c.addvalue("workpostalcode", record["workpostalcode"]);
				c.addvalue("contactid", record["contactid"]);
				sqlupdate(c.tostring());
			}
			//printf("[%s]", c.tostring());
		}
		function remove(contact) {
			var userinfo = db.getuserinfo();
			c = new sqlcommand("DELETE FROM gw_contacts WHERE contactid=? AND obj_did=? AND obj_uid=?;");
			c.addvalue('contactid', contact['contactid']);
			c.addvalue('obj_did', userinfo.domainid);
			c.addvalue('obj_uid', userinfo.userid);
			sqlupdate(c.tostring());
		}
	};



	events = {
		// expand filtering to include assignedto user or group, and a range of dates for the start of the event
		function getlist(startdate1, startdate2, userid, groupid) {
			var userinfo = db.getuserinfo();
			ui=new db.userinfo();
			//if (_SERVER['REQUEST_METHOD']=='POST' && _POST['SEARCHTEXT']!=null) {
				//var text=sql_escape(_POST['SEARCHTEXT'].tolower());
				query=sprintf("SELECT * FROM gw_events WHERE obj_did = %d", ui.domainid);
				if (startdate1!=null) query+=" AND eventstart >= '"+startdate1+"'";
				if (startdate2!=null) query+=" AND eventstart < '"+startdate2+"'";
				if (userid!=null && userid>0) query+=" AND assignedto = "+userid+"";

				//query="SELECT * FROM gw_events WHERE eventstart >= '"+d1.tostring()+"' AND eventstart < '"+d2.tostring()+"' ORDER BY eventstart";

				//query+=" LOWER(eventname) LIKE '%"+text+"%'";
				//query+=" OR LOWER(givenname) LIKE '%"+text+"%'";
				//query+=" OR LOWER(organization) LIKE '%"+text+"%'";
				query+=" ORDER BY eventstart;";
				sqr=sqlquery(query);
			//} else {
			//	sqr=sqlquery("SELECT * FROM gw_events ORDER BY eventstart;");
			//}
			return sqr;
		}
		function get(id) {
			ui=new db.userinfo();
			//var userinfo = db.getuserinfo();
			id=tonumber(id);
			if (id==0) {
				event = db.getblanksqr("gw_events");
				event['_rows'][0]['eventname']='New Event';

				event['_rows'][0]['assignedby']=ui.userid;
				event['_rows'][0]['assignedto']=ui.userid;
				event['_rows'][0]['busy']=1;
				event['_rows'][0]['priority']=2;

				t=time.mktime(time.gmtime())+900;
				t-=t%900;
				event['_rows'][0]['eventstart']=time.sqltime(time.gmtime(t));
				event['_rows'][0]['eventfinish']=time.sqltime(time.gmtime(t+900));

				//contact = {_tuples=1,_rows={[0]={id=0,pid=tonumber(_USER['domainid']),did=tonumber(_USER['domainid']),_data={cn='New Contact'}}}};
				return event;
			}
			sqr=sqlquery("select * from gw_events where eventid = "+id+";");
			return sqr;
		}
		function set(record) {
			var userinfo = db.getuserinfo();
			if (record['eventid']==0) {
				newid=sqlgetsequence("gw_events");
				if (newid<1) {
					printf("newid<1 '%d' ??", newid);
					return;
				}
				record['eventid']=newid;
				c = new sqlcommand("INSERT INTO gw_events (eventid,obj_ctime,obj_mtime,obj_uid,obj_gid,obj_did,obj_gperm,obj_operm,assignedby,assignedto,eventname,eventtype,contactid,projectid,priority,reminder,eventstart,eventfinish,busy,status,closingstatus,details) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);");
				c.addvalue("eventid", record["eventid"]);
				c.addvalue('obj_ctime', time.sqltime(time.gmtime()));
				c.addvalue('obj_mtime', time.sqltime(time.gmtime()));
				c.addvalue('obj_uid', userinfo.userid);
				c.addvalue('obj_gid', userinfo.groupid);
				c.addvalue('obj_did', userinfo.domainid);
				c.addvalue('obj_gperm', 0);
				c.addvalue('obj_operm', 0);
				c.addvalue("assignedby", record["assignedby"]);
				c.addvalue("assignedto", record["assignedto"]);
				c.addvalue("eventname", record["eventname"]);
				c.addvalue("eventtype", record["eventtype"]);
				c.addvalue("contactid", record["contactid"]);
				c.addvalue("projectid", record["projectid"]);
				c.addvalue("priority", record["priority"]);
				c.addvalue("reminder", record["reminder"]);
				c.addvalue("eventstart", record["eventstart"]);
				c.addvalue("eventfinish", record["eventfinish"]);
				c.addvalue("busy", record["busy"]);
				c.addvalue("status", record["status"]);
				c.addvalue("closingstatus", record["closingstatus"]);
				c.addvalue("details", record["details"]);
				sqlupdate(c.tostring());
			} else {
				c = new sqlcommand("UPDATE gw_events SET obj_mtime=?,obj_uid=?,obj_gid=?,obj_did=?,obj_gperm=?,obj_operm=?,assignedby=?,assignedto=?,eventname=?,eventtype=?,contactid=?,projectid=?,priority=?,reminder=?,eventstart=?,eventfinish=?,busy=?,status=?,closingstatus=?,details=? WHERE eventid=?;");
				c.addvalue('obj_mtime', time.sqltime(time.gmtime()));
				c.addvalue("obj_uid", record["obj_uid"]);
				c.addvalue("obj_gid", record["obj_gid"]);
				c.addvalue("obj_did", record["obj_did"]);
				c.addvalue("obj_gperm", record["obj_gperm"]);
				c.addvalue("obj_operm", record["obj_operm"]);
				c.addvalue("assignedby", record["assignedby"]);
				c.addvalue("assignedto", record["assignedto"]);
				c.addvalue("eventname", record["eventname"]);
				c.addvalue("eventtype", record["eventtype"]);
				c.addvalue("contactid", record["contactid"]);
				c.addvalue("projectid", record["projectid"]);
				c.addvalue("priority", record["priority"]);
				c.addvalue("reminder", record["reminder"]);
				c.addvalue("eventstart", record["eventstart"]);
				c.addvalue("eventfinish", record["eventfinish"]);
				c.addvalue("busy", record["busy"]);
				c.addvalue("status", record["status"]);
				c.addvalue("closingstatus", record["closingstatus"]);
				c.addvalue("details", record["details"]);
				c.addvalue("eventid", record["eventid"]);
				sqlupdate(c.tostring());
			}
			//printf("[%s]", c.tostring());
		}
		function remove(event) {
			var userinfo = db.getuserinfo();
			c = new sqlcommand("DELETE FROM gw_events WHERE eventid=? AND obj_did=? AND obj_uid=?;");
			c.addvalue('eventid', event['eventid']);
			c.addvalue('obj_did', userinfo.domainid);
			c.addvalue('obj_uid', userinfo.userid);
			sqlupdate(c.tostring());
		}
	};














	mailaccounts = {
		function getlist() {
			var userinfo = db.getuserinfo();
			sqr=sqlquery(sprintf("SELECT * FROM gw_email_accounts WHERE obj_uid = %d ORDER BY accountname;", userinfo.userid));
			return sqr;
		}
		function get(id) {
			var userinfo = db.getuserinfo();
			id=tonumber(id);
			if (id==0) {
				account = {_tuples=1,_rows={[0]={id=0,pid=tonumber(_USER['domainid']),did=tonumber(_USER['domainid']),_data={cn='New E-Mail Account'}}}};
				return contact;
			}
			sqr=sqlquery(sprintf("SELECT * FROM gw_email_accounts WHERE obj_uid = %d AND mailaccountid = %d;", userinfo.userid, id));
			return sqr;
		}
		function set(record) {
			var userinfo = db.getuserinfo();
			if (record['mailaccountid']==0) {
				newid=sqlgetsequence("gw_email_accounts");
				if (newid<1) {
					printf("newid<1 '%d' ??", newid);
					return;
				}
				record['mailaccountid']=newid;
				c = new sqlcommand("INSERT INTO gw_email_accounts (mailaccountid,obj_ctime,obj_mtime,obj_uid,obj_gid,obj_did,obj_gperm,obj_operm,accountname,realname,organization"+
					",address,replyto,hosttype,popusername,poppassword,pophost,popport,popssl,smtpauth,smtphost,smtpport,smtpssl,notify,remove,showdebug,signature"+
					") VALUES (?,?,?,?,?,?,?,?,?,?,?);");
				c.addvalue('mailaccountid', tonumber(record['mailaccountid']));
				c.addvalue('obj_ctime', time.sqltime());
				c.addvalue('obj_mtime', time.sqltime());
				c.addvalue('obj_uid', userinfo.userid);
				c.addvalue('obj_gid', userinfo.groupid);
				c.addvalue('obj_did', userinfo.domainid);
				c.addvalue('obj_gperm', 0);
				c.addvalue('obj_operm', 0);
				c.addvalue('accountname', record['accountname']);
				c.addvalue('realname', record['realname']);
				c.addvalue('organization', record['organization']);
				c.addvalue('address', record['address']);
				c.addvalue('replyto', record['replyto']);
				c.addvalue('hosttype', record['hosttype']);
				c.addvalue('popusername', record['popusername']);
				c.addvalue('poppassword', record['poppassword']);
				c.addvalue('pophost', record['pophost']);
				c.addvalue('popport', record['popport']);
				c.addvalue('popssl', record['popssl']);
				c.addvalue('smtpauth', record['smtpauth']);
				c.addvalue('smtphost', record['smtphost']);
				c.addvalue('smtpport', record['smtpport']);
				c.addvalue('smtpssl', record['smtpssl']);
				c.addvalue('notify', record['notify']);
				c.addvalue('remove', record['remove']);
				c.addvalue('showdebug', record['showdebug']);
				c.addvalue('signature', record['signature']);
				sqlupdate(c.tostring());
			} else {
				c = new sqlcommand("UPDATE gw_email_accounts SET obj_mtime=?,obj_uid=?,obj_gid=?,obj_did=?,obj_gperm=?,obj_operm=?,accountname=?,realname=?,organization=?,address=?,replyto=?,hosttype=?"+
					",popusername=?,poppassword=?,pophost=?,popport=?,popssl=?,smtpauth=?,smtphost=?,smtpport=?,smtpssl=?,notify=?,remove=?,showdebug=?,signature=? WHERE mailaccountid=?;");
				c.addvalue('obj_mtime', time.sqltime());
				c.addvalue('obj_uid', tonumber(record['obj_uid']));
				c.addvalue('obj_gid', tonumber(record['obj_gid']));
				c.addvalue('obj_did', tonumber(record['obj_did']));
				c.addvalue('obj_gperm', tonumber(record['obj_gperm']));
				c.addvalue('obj_operm', tonumber(record['obj_operm']));
				c.addvalue('accountname', record['accountname']);
				c.addvalue('realname', record['realname']);
				c.addvalue('organization', record['organization']);
				c.addvalue('address', record['address']);
				c.addvalue('replyto', record['replyto']);
				c.addvalue('hosttype', record['hosttype']);
				c.addvalue('popusername', record['popusername']);
				c.addvalue('poppassword', record['poppassword']);
				c.addvalue('pophost', record['pophost']);
				c.addvalue('popport', record['popport']);
				c.addvalue('popssl', record['popssl']);
				c.addvalue('smtpauth', record['smtpauth']);
				c.addvalue('smtphost', record['smtphost']);
				c.addvalue('smtpport', record['smtpport']);
				c.addvalue('smtpssl', record['smtpssl']);
				c.addvalue('notify', record['notify']);
				c.addvalue('remove', record['remove']);
				c.addvalue('showdebug', record['showdebug']);
				c.addvalue('signature', record['signature']);
				c.addvalue('mailaccountid', tonumber(record['mailaccountid']));
				sqlupdate(c.tostring());
			}
			//printf("[%s]", c.tostring());
		}
		function remove(record) {
			printf("<b>not implemented</b><br>");
		}
	};
	mailheaders = {
		function get(id) {
			var userinfo = db.getuserinfo();
			id=tonumber(id);
			if (id==0) {
				sqr = db.getblanksqr("gw_email_headers");
				sqr['_rows'][0]['hdr_subject']='';
				return sqr;
			}
			sqr=sqlquery(sprintf("SELECT * FROM gw_email_headers WHERE obj_uid = %d and mailheaderid = %d;", userinfo.userid, id));
			return sqr;
		}
	};
	notes = {
		function getlist() {
			var userinfo = db.getuserinfo();
			query=sprintf("SELECT * FROM gw_notes WHERE obj_uid = %d;", userinfo.userid);
			sqr=sqlquery(query);
			return sqr;
		}
		function get(id) {
			ui=new db.userinfo();
			id=tonumber(id);
			if (id==0) {
				sqr = db.getblanksqr("gw_notes");
				sqr['_rows'][0]['notetitle']='New Note';
				sqr['_rows'][0]['notetext']='';
				return sqr;
			}
			sqr=sqlquery(sprintf("select * from gw_notes where obj_did = %d and noteid = %d;", ui.domainid, id));
			return sqr;
		}
		function set() {
		}
	};
	profile = {
		function get() {
			var userinfo = db.getuserinfo();
			query=sprintf("select * from gw_users where userid = %d and obj_did = %d;", userinfo.userid, userinfo.domainid);
			return sqlquery(query);
		}
		function set() {
		}
	};
	tasks = {
		function getlist() {
/*
			var userinfo = db.getuserinfo();
			if (_SERVER['REQUEST_METHOD']=='POST' && _POST['SEARCHTEXT']!=null) {
				var text=sql_escape(_POST['SEARCHTEXT'].tolower());
				query="SELECT * FROM gw_tasks WHERE";
				query+=" LOWER(eventname) LIKE '%"+text+"%'";
				query+=" ORDER BY eventstart;";
				sqr=sqlquery(query);
			} else {
				sqr=sqlquery("SELECT * FROM gw_tasks ORDER BY eventstart;");
			}
			return sqr;
*/
		}
		function get(id) {
			id=tonumber(id);
			ui=new db.userinfo();
			if (id==0) {
				task = db.getblanksqr("gw_tasks");
				task['_rows'][0]['taskname']='New Task';
				task['_rows'][0]['assignedby']=ui.userid;
				task['_rows'][0]['assignedto']=ui.userid;
				task['_rows'][0]['priority']=2;

				t=time.mktime(time.gmtime())+900;
				t-=t%900;
				task['_rows'][0]['duedate']=time.sqltime(time.gmtime(t));

				return task;
			}
			sqr=sqlquery("select * from gw_tasks where taskid = "+id+";");
			return sqr;
		}
		function set(record) {
			var userinfo = db.getuserinfo();
			if (record['taskid']==0) {
				newid=sqlgetsequence("gw_tasks");
				if (newid<1) {
					printf("newid<1 '%d' ??", newid);
					return;
				}
				record['taskid']=newid;
				c = new sqlcommand("INSERT INTO gw_tasks (taskid,obj_ctime,obj_mtime,obj_uid,obj_gid,obj_did,obj_gperm,obj_operm,assignedby,assignedto,taskname,contactid,projectid,duedate,priority,progress,reminder,status,details) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);");
				c.addvalue("taskid", record["taskid"]);
				c.addvalue('obj_ctime', time.sqltime(time.gmtime()));
				c.addvalue('obj_mtime', time.sqltime(time.gmtime()));
				c.addvalue('obj_uid', userinfo.userid);
				c.addvalue('obj_gid', userinfo.groupid);
				c.addvalue('obj_did', userinfo.domainid);
				c.addvalue('obj_gperm', 0);
				c.addvalue('obj_operm', 0);
				c.addvalue("assignedby", record["assignedby"]);
				c.addvalue("assignedto", record["assignedto"]);
				c.addvalue("taskname", record["taskname"]);
				c.addvalue("contactid", record["contactid"]);
				c.addvalue("projectid", record["projectid"]);
				c.addvalue("duedate", record["duedate"]);
				c.addvalue("priority", record["priority"]);
				c.addvalue("progress", record["progress"]);
				c.addvalue("reminder", record["reminder"]);
				c.addvalue("status", record["status"]);
				c.addvalue("details", record["details"]);
				sqlupdate(c.tostring());
			} else {
				c = new sqlcommand("UPDATE gw_tasks SET obj_mtime=?,obj_uid=?,obj_gid=?,obj_did=?,obj_gperm=?,obj_operm=?,assignedby=?,assignedto=?,taskname=?,contactid=?,projectid=?,duedate=?,priority=?,progress=?,reminder=?,status=?,details=? WHERE taskid=?;");
				c.addvalue('obj_mtime', time.sqltime(time.gmtime()));
				c.addvalue("obj_uid", record["obj_uid"]);
				c.addvalue("obj_gid", record["obj_gid"]);
				c.addvalue("obj_did", record["obj_did"]);
				c.addvalue("obj_gperm", record["obj_gperm"]);
				c.addvalue("obj_operm", record["obj_operm"]);
				c.addvalue("assignedby", record["assignedby"]);
				c.addvalue("assignedto", record["assignedto"]);
				c.addvalue("taskname", record["taskname"]);
				c.addvalue("contactid", record["contactid"]);
				c.addvalue("projectid", record["projectid"]);
				c.addvalue("duedate", record["duedate"]);
				c.addvalue("priority", record["priority"]);
				c.addvalue("progress", record["progress"]);
				c.addvalue("reminder", record["reminder"]);
				c.addvalue("status", record["status"]);
				c.addvalue("details", record["details"]);
				c.addvalue("taskid", record["taskid"]);
				sqlupdate(c.tostring());
			}
			//printf("[%s]", c.tostring());
		}
		function remove(task) {
			var userinfo = db.getuserinfo();
			c = new sqlcommand("DELETE FROM gw_tasks WHERE taskid=? AND obj_did=? AND obj_uid=?;");
			c.addvalue('taskid', task['taskid']);
			c.addvalue('obj_did', userinfo.domainid);
			c.addvalue('obj_uid', userinfo.userid);
			sqlupdate(c.tostring());
		}
	};
};
