#!/bin/sh
MAIN_TITLE="NullLogic Groupware Configuration v1.3.10"
HAVE_CONFIG="no"
HAVE_DIALOG="no"
cd ..
BASE_PATH=`pwd`
CFG_FILE="$BASE_PATH/etc/groupware.cfg"
cd etc
TMP=/tmp

SERVER_DIR_BASE="$BASE_PATH"
SERVER_DIR_BIN="$BASE_PATH/bin"
SERVER_DIR_ETC="$BASE_PATH/etc"
SERVER_DIR_LIB="$BASE_PATH/lib"
SERVER_DIR_VAR="$BASE_PATH/var"
SERVER_DIR_VAR_BACKUP="$BASE_PATH/var/backup"
SERVER_DIR_VAR_CGI="$BASE_PATH/var/cgi-bin"
SERVER_DIR_VAR_DB="$BASE_PATH/var/db"
SERVER_DIR_VAR_DOMAINS="$BASE_PATH/var/domains"
SERVER_DIR_VAR_HTDOCS="$BASE_PATH/var/htdocs"
SERVER_DIR_VAR_LOG="$BASE_PATH/var/log"
SERVER_DIR_VAR_SPOOL="$BASE_PATH/var/spool"
SERVER_DIR_VAR_TMP="$BASE_PATH/var/tmp"
SERVER_LOGLEVEL="1"
SERVER_USERNAME="nullgw"
SERVER_GROUPNAME=$SERVER_USERNAME
HTTP_HOSTNAME="INADDR_ANY"
HTTP_PORT="4110"
HTTP_SSLPORT="4112"
HTTP_MAXCONN="50"
HTTP_MAXIDLE="120"
POP3_HOSTNAME="INADDR_ANY"
POP3_PORT="110"
POP3_MAXCONN="50"
POP3_MAXIDLE="120"
SMTP_HOSTNAME="INADDR_ANY"
SMTP_PORT="25"
SMTP_MAXCONN="50"
SMTP_MAXIDLE="120"
SQL_TYPE="SQLITE"
SQL_HOSTNAME="localhost"
SQL_PORT="0"
SQL_DBNAME="nullgroupware"
SQL_USERNAME="nullgw"
SQL_PASSWORD="password"
UTIL_SCANFILE=""
UTIL_SCANMAIL=""

read_config() {
	if [ -r "$CFG_FILE" ]; then
		HAVE_CONFIG="yes"
		if [ "$HAVE_DIALOG" = "yes" ]; then
			dialog --backtitle "$MAIN_TITLE" --title "NULLLOGIC GROUPWARE CONFIGURATION" --infobox "\nPrevious config found - importing settings..." 5 50
		else
			echo "Previous config found - importing settings..."
		fi
		TMPSTR=`grep -i SERVER\.DIR\.BASE $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			SERVER_DIR_BASE=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
		fi
		TMPSTR=`grep -i SERVER\.LOGLEVEL $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			SERVER_LOGLEVEL=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
		fi
		TMPSTR=`grep -i SERVER\.USERNAME $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			SERVER_USERNAME=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
			SERVER_GROUPNAME=$SERVER_USERNAME
		fi
		TMPSTR=`grep -i HTTP\.HOSTNAME $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			HTTP_HOSTNAME=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
		fi
		TMPSTR=`grep -i HTTP\.PORT $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			HTTP_PORT=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
		fi
		TMPSTR=`grep -i HTTP\.SSLPORT $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			HTTP_SSLPORT=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
		fi
		TMPSTR=`grep -i SQL\.TYPE $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			SQL_TYPE=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
		fi
		TMPSTR=`grep -i SQL\.HOSTNAME $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			SQL_HOSTNAME=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
		fi
		TMPSTR=`grep -i SQL\.PORT $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			SQL_PORT=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
		fi
		TMPSTR=`grep -i SQL\.DBNAME $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			SQL_DBNAME=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
		fi
		TMPSTR=`grep -i SQL\.USERNAME $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			SQL_USERNAME=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
		fi
		TMPSTR=`grep -i SQL\.PASSWORD $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			SQL_PASSWORD=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
		fi
		TMPSTR=`grep -i UTIL\.SCANFILE $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			UTIL_SCANFILE=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
		fi
		TMPSTR=`grep -i UTIL\.SCANMAIL $CFG_FILE | awk -F'#' '{ print $1 }'`
		if test -n "$TMPSTR"; then
			UTIL_SCANMAIL=`echo $TMPSTR | awk -F'"' '{ print $2 }'`
		fi
		sleep 2
	fi
}

write_config() {
	touch $CFG_FILE 1>/dev/null 2>/dev/null
	chmod 0600 $CFG_FILE
	if [ -w "$CFG_FILE" ]; then
		# Write groupware.cfg configuration file
		cat << EOF > $CFG_FILE
# This file contains settings for NullLogic Groupware.

SERVER.DIR.BASE   = "$SERVER_DIR_BASE"
SERVER.DIR.BIN    = "$SERVER_DIR_BASE/bin"
SERVER.DIR.ETC    = "$SERVER_DIR_BASE/etc"
SERVER.DIR.LIB    = "$SERVER_DIR_BASE/lib"
SERVER.DIR.VAR    = "$SERVER_DIR_BASE/var"
SERVER.LOGLEVEL   = "$SERVER_LOGLEVEL"
SERVER.USERNAME   = "$SERVER_USERNAME"
HTTP.HOSTNAME     = "$HTTP_HOSTNAME"
HTTP.PORT         = "$HTTP_PORT"
HTTP.SSLPORT      = "$HTTP_SSLPORT"
HTTP.MAXCONN      = "$HTTP_MAXCONN"
HTTP.MAXIDLE      = "$HTTP_MAXIDLE"
SQL.TYPE          = "$SQL_TYPE"
SQL.HOSTNAME      = "$SQL_HOSTNAME"
SQL.PORT          = "$SQL_PORT"
SQL.DBNAME        = "$SQL_DBNAME"
SQL.USERNAME      = "$SQL_USERNAME"
SQL.PASSWORD      = "$SQL_PASSWORD"
UTIL.SCANFILE     = "$UTIL_SCANFILE"
UTIL.SCANMAIL     = "$UTIL_SCANMAIL"
EOF
	fi
}

set_permissions() {
	if [ -x "/usr/sbin/useradd" ]; then
		/usr/sbin/groupadd $SERVER_GROUPNAME 1>/dev/null 2>&1
		/usr/sbin/useradd -c "NullLogic Groupware" -d $SERVER_DIR_BASE/etc -g $SERVER_GROUPNAME $SERVER_USERNAME 1>/dev/null 2>&1
	elif [ -x "/usr/sbin/pw" ]; then
		pw group add $SERVER_GROUPNAME       1>/dev/null 2>&1
		pw user add $SERVER_USERNAME         1>/dev/null 2>&1
	fi
	chown -R $SERVER_USERNAME:$SERVER_GROUPNAME $SERVER_DIR_BASE/etc 1>/dev/null 2>/dev/null
	chown -R $SERVER_USERNAME:$SERVER_GROUPNAME $SERVER_DIR_BASE/var 1>/dev/null 2>/dev/null
}

setup_console() {
	read_config
	clear 2>/dev/null
	echo "NullLogic Groupware Configuration"
	echo "================================="
	# Get config information
	echo -n "Will you be using SQLITE, MYSQL or PGSQL [$SQL_TYPE]: "
	read TMP
	if [ ! -z $TMP ]; then
		SQL_TYPE=$TMP
	fi
	case "$SQL_TYPE" in
		MYSQL)
		SQL_PORT="3306"
		;;
		PGSQL)
		SQL_PORT="5432"
		;;
		SQLITE)
		SQL_PORT="0"
		;;
		*)
		echo "Unknown SQL server type $SQL_TYPE. Exiting."
		exit
		;;
	esac
	case "$SQL_TYPE" in
		SQLITE)
		SQL_PORT="0"
		SQL_USERNAME=""
		SQL_HOSTNAME=""
		SQL_DBNAME=""
		SQL_USERNAME=""
		SQL_PASSWORD=""
		;;
		*)
		echo -n "What is the host name of the $SQL_TYPE server? [$SQL_HOSTNAME]: "
		read TMP
		if [ ! -z $TMP ]; then
			SQL_HOSTNAME=$TMP
		fi
		echo -n "What TCP/IP port is the $SQL_TYPE server listening on? [$SQL_PORT]: "
		read TMP
		if [ ! -z $TMP ]; then
			SQL_PORT=$TMP
		fi
		echo -n "What is the name of the database NullLogic Groupware should use? [$SQL_DBNAME]: "
		read TMP
		if [ ! -z $TMP ]; then
			SQL_DBNAME=$TMP
		fi
		echo -n "What username should NullLogic Groupware use to access the database? [$SQL_USERNAME]: "
		read TMP
		if [ ! -z $TMP ]; then
			SQL_USERNAME=$TMP
		fi
		echo -n "What is the password for the '$SQL_USERNAME' account? [$SQL_PASSWORD]: "
		read TMP
		if [ ! -z $TMP ]; then
			SQL_PASSWORD=$TMP
		fi
		;;
	esac
}

setup_dialog_sql() {
	if [ "$SQL_TYPE" = "MYSQL" ]; then
		SQLITE_STATUS="off"
		MYSQL_STATUS="on"
		PGSQL_STATUS="off"
	elif [ "$SQL_TYPE" = "PGSQL" ]; then
		SQLITE_STATUS="off"
		MYSQL_STATUS="off"
		PGSQL_STATUS="on"
	else
		SQLITE_STATUS="on"
		MYSQL_STATUS="off"
		PGSQL_STATUS="off"
	fi
	dialog --backtitle "$MAIN_TITLE" --title "NULLLOGIC GROUPWARE CONFIGURATION" --radiolist \
"
Which SQL backend database will you be using?

" 12 70 3 \
"SQLITE" "SQLITE     (no further configuration required)" "$SQLITE_STATUS" \
"MYSQL" "MySQL      (requires some SQL knowhow)" "$MYSQL_STATUS" \
"PGSQL" "PostgreSQL (requires some SQL knowhow)" "$PGSQL_STATUS" 2> $TMP/gw_tmpout
	if [ $? = 1 -o $? = 255 ]; then
		rm -f $TMP/gw_tmpout
		exit
	fi
	SQL_TYPE=`cat $TMP/gw_tmpout`
	rm -f $TMP/gw_tmpout
	if [ "$HAVE_CONFIG" = "no" ]; then
		if [ "$SQL_TYPE" = "MYSQL" ]; then
			SQL_PORT="3306"
		elif [ "$SQL_TYPE" = "PGSQL" ]; then
			SQL_PORT="5432"
		elif [ "$SQL_TYPE" = "SQLITE" ]; then
			SQL_HOSTNAME=""
			SQL_PORT="0"
			SQL_DBNAME=""
			SQL_USERNAME=""
			SQL_PASSWORD=""
		else
			echo "Unknown SQL server type $SQL_TYPE. Exiting."
			exit
		fi
	fi
	if [ "$SQL_TYPE" != "SQLITE" ]; then
		# GET THE SQL HOSTNAME
		while [ 0 ]; do
			cat << EOF > $TMP/tempmsg

Now we need the host name or IP address of the $SQL_TYPE server.


What is the host name of the $SQL_TYPE server?
EOF
			dialog --backtitle "$MAIN_TITLE" --title "NULLLOGIC GROUPWARE CONFIGURATION" --inputbox "`cat $TMP/tempmsg`" 12 70 $SQL_HOSTNAME 2> $TMP/gw_tmpout
			if [ $? = 1 -o $? = 255 ]; then
				rm -f $TMP/tempmsg $TMP/gw_tmpout
				exit
			fi
			SQL_HOSTNAME="`cat $TMP/gw_tmpout`"
			rm -f $TMP/tempmsg $TMP/gw_tmpout
			if [ ! "$SQL_HOSTNAME" = "" ]; then
				break;
			fi
		done
		# GET THE SQL PORT
		while [ 0 ]; do
			cat << EOF > $TMP/tempmsg

Now we need the TCP/IP port of the $SQL_TYPE server.


What TCP/IP port is the $SQL_TYPE server listening on?
EOF
			dialog --backtitle "$MAIN_TITLE" --title "NULLLOGIC GROUPWARE CONFIGURATION" --inputbox "`cat $TMP/tempmsg`" 12 70 $SQL_PORT 2> $TMP/gw_tmpout
			if [ $? = 1 -o $? = 255 ]; then
				rm -f $TMP/tempmsg $TMP/gw_tmpout
				exit
			fi
			SQL_PORT="`cat $TMP/gw_tmpout`"
			rm -f $TMP/tempmsg $TMP/gw_tmpout
			if [ ! "$SQL_PORT" = "" ]; then
				break;
			fi
		done
		# GET THE SQL DB NAME
		while [ 0 ]; do
			cat << EOF > $TMP/tempmsg

Now we need the name of the database which will contain your data.


What is the name of the database NullLogic Groupware should use?
EOF
			dialog --backtitle "$MAIN_TITLE" --title "NULLLOGIC GROUPWARE CONFIGURATION" --inputbox "`cat $TMP/tempmsg`" 12 70 $SQL_DBNAME 2> $TMP/gw_tmpout
			if [ $? = 1 -o $? = 255 ]; then
				rm -f $TMP/tempmsg $TMP/gw_tmpout
				exit
			fi
			SQL_DBNAME="`cat $TMP/gw_tmpout`"
			rm -f $TMP/tempmsg $TMP/gw_tmpout
			if [ ! "$SQL_DBNAME" = "" ]; then
				break;
			fi
		done
		# GET THE SQL USER NAME
		while [ 0 ]; do
			cat << EOF > $TMP/tempmsg

Now we need the user name to use to connect to the $SQL_TYPE server.


What username should be used to access the $SQL_SERVER database?
EOF
			dialog --backtitle "$MAIN_TITLE" --title "NULLLOGIC GROUPWARE CONFIGURATION" --inputbox "`cat $TMP/tempmsg`" 12 70 $SQL_USERNAME 2> $TMP/gw_tmpout
			if [ $? = 1 -o $? = 255 ]; then
				rm -f $TMP/tempmsg $TMP/gw_tmpout
				exit
			fi
			SQL_USERNAME="`cat $TMP/gw_tmpout`"
			rm -f $TMP/tempmsg $TMP/gw_tmpout
			if [ ! "$SQL_USERNAME" = "" ]; then
				break;
			fi
		done
		# GET THE SQL PASSWORD
		while [ 0 ]; do
			cat << EOF > $TMP/tempmsg

Now we need the password to use to connect to the $SQL_TYPE server.


What is the password for the '$SQL_USERNAME' account?
EOF
			dialog --backtitle "$MAIN_TITLE" --title "NULLLOGIC GROUPWARE CONFIGURATION" --inputbox "`cat $TMP/tempmsg`" 12 70 $SQL_PASSWORD 2> $TMP/gw_tmpout
			if [ $? = 1 -o $? = 255 ]; then
				rm -f $TMP/tempmsg $TMP/gw_tmpout
				exit
			fi
			SQL_PASSWORD="`cat $TMP/gw_tmpout`"
			rm -f $TMP/tempmsg $TMP/gw_tmpout
			if [ ! "$SQL_PASSWORD" = "" ]; then
				break;
			fi
		done
	fi
}

setup_dialog() {
	if [ "`whoami`" != "root" ]; then
		dialog --backtitle "$MAIN_TITLE" --title "WARNING" --yesno "
NullLogic Groupware should be installed by root.

Do you want to continue with the installation?" 12 70
		FLAG=$?
		if [ ! $FLAG = 0 -a ! $FLAG = 1 ]; then
			exit 1
		fi
		if [ $FLAG = 0 ]; then # yes
			dialog --backtitle "$MAIN_TITLE" --title "NULLLOGIC GROUPWARE CONFIGURATION" --msgbox "\nYou've been warned." 12 70
		else
			clear 2>/dev/null
			exit
		fi
	fi
	cat << EOF > $TMP/tempmsg

We will now attempt to configure NullLogic Groupware for your server.
This process doesn't cover every possible configuration, but it will
give you a basic working setup to start with.  You will be able to
reconfigure your system at any time by editing 'etc/groupware.cfg'.

EOF
	dialog --backtitle "$MAIN_TITLE" --title "NULLLOGIC GROUPWARE CONFIGURATION" --msgbox "`cat $TMP/tempmsg`" 12 74
	rm -f $TMP/SeThost $TMP/tempmsg
	if [ $? = 1 -o $? = 255 ]; then
		exit
	fi

	read_config

	setup_dialog_sql

	if [ "$SQL_TYPE" != "SQLITE" ]; then
		dialog --backtitle "$MAIN_TITLE" --title "NETWORK SETUP COMPLETE" --yesno "Your networking \
system is now configured with these settings:

Install Path  : $SERVER_DIR_BASE
SQL Host Type : $SQL_TYPE
SQL Host Name : $SQL_HOSTNAME
SQL TCP Port  : $SQL_PORT
SQL Database  : $SQL_DBNAME
SQL Username  : $SQL_USERNAME
SQL Password  : $SQL_PASSWORD

Is this correct?  Press 'Yes' to continue, or 'No' to reconfigure." 0 0
		FLAG=$?
		if [ ! $FLAG = 0 -a ! $FLAG = 1 ]; then
			exit 1
		fi
		if [ $FLAG != 0 ]; then # no
			clear 2>/dev/null
			echo "Setup was aborted"
			exit
		fi
	fi
}

case "$1" in
upgrade)
	read_config
	set_permissions
	exit
	;;
*)
	if [ -x /bin/dialog ]; then
		HAVE_DIALOG="yes"
		setup_dialog
	else
		setup_console
	fi
	write_config
	set_permissions
esac

clear 2>/dev/null
if [ "$HAVE_CONFIG" = "no" ]; then
	case "$SQL_TYPE" in
		MYSQL)
		echo "In order to complete the install, you will need to manually create the"
		echo "SQL database $SQL_DBNAME as follows."
		echo "  mysqladmin create $SQL_DBNAME"
		echo
		echo "After creating the database, please run $SERVER_DIR_BASE/bin/dbutil to"
		echo "initialise the database."
		echo
		;;
		PGSQL)
		echo "In order to complete the install, you will need to manually create the"
		echo "SQL database $SQL_DBNAME as follows."
		echo "  createdb $SQL_DBNAME"
		echo
		echo "After creating the database, please run $SERVER_DIR_BASE/bin/dbutil to"
		echo "initialise the database."
		echo
		;;
		*)
		echo
		;;
	esac
fi
exit
