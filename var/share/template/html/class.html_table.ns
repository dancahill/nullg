/*
*/
class html_table {
	_constructor = function () {
		/* columns to show in table - name and label should exist for each column */
		this.columns={};
		/* tablename should be unique so jquery tablesorter can find it */
		this.tablename="TableName";
		/* css class name */
		this.tableclass="";
		/* autoadd all columns after any defined columns */
		this.autoaddcolumns=true;
		/* sql query result */
		this.datasource=null;
	};
	/* function to add column */
	addcolumn = function (name, label, lambda) {
		columns[sizeof(columns)]={ name=name, label=label, lambda=lambda };
	};
	/* function to output complete table */
	write = function () {
		// these should already be included in header.ns
		//print("<script type=\"text/javascript\" src=\"/scripts/jquery.js\"></script>\r\n");
		//print("<script type=\"text/javascript\" src=\"/scripts/jquery.tablesorter.js\"></script>\r\n");
		printf("<script type=\"text/javascript\">\r\n"+
			"$(function() {\r\n"+
			"	$(\"#%s\").tablesorter({sortList:[[0,0]], widgets: ['zebra']});\r\n"+
			"});\r\n"+
			"</script>"
			, tablename
		);
		print("<table");
		if (tablename!="") print(" id='"+tablename+"'");
		if (tableclass!="") print(" class='"+tableclass+"'");
		print(">\r\n");
		print("<thead>");
		print("<tr>");
		foreach (column in columns) {
			printf("<th>%s</th>", str2html(column.label));
		}
		if (autoaddcolumns==true) {
			foreach (n,v in datasource._rows[0]) {
				printf("<th>%s</th>", str2html(n));
			}
		}
		print("</tr>\r\n");
		print("</thead>");
		print("<tbody>");
		foreach (record in datasource._rows) {
			print("<tr>");
			foreach (column in columns) {
				print("<td>");
				if (column.lambda!=null) {
					print(column.lambda(record, column));
				} else {
					print(str2html(record[column.name]));
				}
				print("</td>");
			}
			if (autoaddcolumns==true) {
				foreach (n,v in record) {
					printf("<td>%s</td>", str2html(v));
				}
			}
			print("</tr>\r\n");
		}
		print("</tbody>");
		print("</table>");
	};
}
