#!/usr/bin/nesla
var src="";
var srcloc="../../";
print("splicing...");
if (typeof(x=file.read(srcloc+"include/nesla/nesla.h"))=='string') src+=x;
if (typeof(x=file.read(srcloc+"include/nesla/libnesla.h"))=='string') src+=x;
if (typeof(x=file.read(srcloc+"src/libnesla/opcodes.h"))=='string') src+=x;
if (typeof(x=file.read(srcloc+"src/libnesla/block.c"))=='string') src+=x;
if (typeof(x=file.read(srcloc+"src/libnesla/compile.c"))=='string') src+=x;
if (typeof(x=file.read(srcloc+"src/libnesla/debug.c"))=='string') src+=x;
if (typeof(x=file.read(srcloc+"src/libnesla/exec.c"))=='string') src+=x;
if (typeof(x=file.read(srcloc+"src/libnesla/libc.c"))=='string') src+=x;
if (typeof(x=file.read(srcloc+"src/libnesla/libn.c"))=='string') src+=x;
if (typeof(x=file.read(srcloc+"src/libnesla/objects.c"))=='string') src+=x;
if (typeof(x=file.read(srcloc+"src/libnesla/opcodes.c"))=='string') src+=x;
if (typeof(x=file.read(srcloc+"src/libnesla/parser.c"))=='string') src+=x;
if (typeof(x=file.read(srcloc+"src/hosts/lite/main.c"))=='string') src+=x;
src=string.join(string.split(src, "#include \"nesla/nesla.h\""), "");
src=string.join(string.split(src, "#include \"nesla/libnesla.h\""), "");
src=string.join(string.split(src, "#include \"opcodes.h\""), "");
file.write("blob.c", src);
print("done\n");
io.write();

print("compiling...");

if (_ostype_=="Windows/msvc") {
	system("cl.exe -nologo -DWIN32 blob.c -Feblob.exe");
	file.unlink("blob.obj");
} else {
	// best runtime results
	system("gcc -O3 -s -static blob.c -march=pentium2 -o blob");
	// best overall (w/compile) 30%+ slower runtime, but _much_ faster compiling
//	system("gcc -O0 -s blob.c -o blob");
}

print("done\n");

print("timing...");
t=runtime();
if (_ostype_=="Windows/msvc") {
	system("blob.exe -e \"for ($i=1;$i<100001;$i++) { if ($i%20000==0) { print($i/20000); } }\"");
} else {
	system("./blob -e \"for (\\$i=1;\\$i<100001;\\$i++) { if (\\$i%20000==0) { print(\\$i/20000); } }\"");
}
print("done\n");
print(" ",runtime()-t,"\n");
print("total time = ",runtime(),"\n");
