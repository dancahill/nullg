# Process this file with autoconf to produce a configure script.
AC_INIT(nullgroupware, 1.3.5, nulllogic@users.sourceforge.net)
AC_CONFIG_HEADER([include/config.h])

# Checks for programs.
AC_PROG_CC

# Checks for libraries.
# FIXME: Replace `main' with a function in `-ldl':
AC_CHECK_LIB([dl], [dlopen])
UTIL_LIBS=$LIBS
AC_SUBST(UTIL_LIBS)

# FIXME: Replace `main' with a function in `-lpthread':
AC_CHECK_LIB([pthread], [pthread_create])
if test "$ac_cv_lib_pthread_main" = "no"
then
	ac_save_LIBS="$LIBS"
	# This is for FreeBSD
	LIBS="$LIBS -pthread"
	AC_MSG_CHECKING("for pthread_create in -pthread");
	AC_TRY_LINK(
	[#include <pthread.h>],
	[ pthread_create((pthread_t*) 0,(pthread_attr_t*) 0, 0, 0); ],
	with_posix_threads=yes, with_posix_threads=no)
	AC_MSG_RESULT("$with_posix_threads")
	if test "$with_posix_threads" = "no"
	then
		with_mit_threads="yes"
		LIBS="$ac_save_LIBS"
	fi
fi

# FIXME: Replace `main' with a function in `-lcrypto':
AC_CHECK_LIB([crypto], [main])

# FIXME: Replace `main' with a function in `-lssl':
AC_CHECK_LIB([ssl], [main])

# Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([	\
	arpa/inet.h	\
	fcntl.h		\
	netdb.h		\
	netinet/in.h	\
	paths.h		\
	stdlib.h	\
	string.h	\
	sys/file.h	\
	sys/socket.h	\
	sys/time.h	\
	sys/timeb.h	\
	unistd.h	\
	mysql/mysql.h	\
])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

# Checks for library functions.
AC_FUNC_ERROR_AT_LINE
AC_FUNC_FORK
AC_FUNC_MALLOC
AC_FUNC_SETVBUF_REVERSED
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_STRFTIME
AC_CHECK_FUNCS([			\
	dup2				\
	endpwent			\
	ftime				\
	getcwd				\
	gethostbyname			\
	gettimeofday			\
	inet_ntoa			\
	memmove				\
	memset				\
	mkdir				\
	rmdir				\
	socket				\
	strcasecmp			\
	strchr				\
	strncasecmp			\
	strrchr				\
	strstr				\
	strcasestr			\
	pthread_attr_setstacksize	\
])

AC_CONFIG_FILES([Rules.mak Makefile include/config-nt.h])
AC_OUTPUT

echo
echo "Configuring SQLite"
echo
cd sqlite;./make_sqlite configure;cd ..

echo
echo "Configuration completed."
echo
echo "Now run 'make'."
echo
